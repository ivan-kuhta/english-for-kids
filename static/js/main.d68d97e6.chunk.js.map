{"version":3,"sources":["types/header.ts","store/reducers/headerReducer.ts","types/words.ts","data/cards.ts","store/reducers/wordsReducer.ts","types/play.ts","store/reducers/playReducer.ts","types/statistic.ts","store/reducers/statisticReducer.ts","types/modal.ts","store/reducers/modalReducer.ts","store/reducers/index.ts","store/index.ts","store/actions/words.ts","store/actions/statistic.ts","store/actions/play.ts","components/switch-box/SwitchBox.tsx","store/actions/header.ts","components/button/Button.tsx","utils/getSrc.ts","components/header/Header.tsx","store/actions/modal.ts","components/card/Card.tsx","components/menu-items/menu-item/MenuItem.tsx","components/menu-items/MenuItems.tsx","components/sidebar/Sidebar.tsx","components/checks-bar/ChecksBar.tsx","components/words-list/word-item/WordItem.tsx","components/words-list/WordsList.tsx","pages/CategoryPage.tsx","pages/HardwordsPage.tsx","pages/MainPage.tsx","components/statistic-table/th/Th.tsx","components/statistic-table/td/Td.tsx","components/statistic-table/tr/Tr.tsx","components/statistic-table/StatisticTable.tsx","pages/StatisticPage.tsx","components/auth/Auth.tsx","components/modal/Modal.tsx","components/app/App.tsx","routes.js","components/app/index.ts","index.tsx"],"names":["HeaderActionTypes","WordsActionTypes","initialState","sidebar","cards","categories","id","name","image","words","word","translation","audioSrc","PlayActionTypes","StatisticActionTypes","playMode","start","errors","checks","ModalActionTypes","data","open","rootReducer","combineReducers","header","state","action","type","TOGGLE_SIDEBAR","SET_SIDEBAR","value","GET_WORDS","wordsCategory","payload","CLEAR_WORDS_CATEGORY","undefined","play","TOGGLE_PLAY_MODE","PLAY_GAME","RANDOM_WORD","activeWord","randomWord","PLAY_SOUND","CHECK_WORD","checkWord","filter","END_GAME","endGame","RESUME_GAME","statistic","FETCH_STATISTIC","FILTER_STATISTIC","fieldFilter","field","ascFilter","asc","modal","TOGGLE_MODAL","SET_OPEN_MODAL","store","createStore","getWords","indexCategory","findIndex","category","find","index","dispatch","addStatisticLS","toString","stringState","localStorage","getItem","JSON","stringify","correct","incorrect","trained","setItem","parseState","parse","getHardWords","fetchStatistic","sort","a","b","wordState","percentage","slice","map","categoryName","wordName","getWord","wordsState","getState","wordStatisticLS","wordStatistic","parseWord","flat","Math","floor","random","length","playSound","audio","Audio","src","resumeGame","SwitchBox","className","checked","this","props","onChange","Component","toggleSidebar","setSidebar","Button","onClick","thema","disabled","children","defaultFolder","getSrcImageWord","getSrcImageIcon","Header","alt","to","connect","setOpenModel","Card","class","MenuItem","href","card","title","MenuItems","visibleCard","Sidebar","e","stopPropagation","ChecksBar","check","WordItem","playing","flipped","prevProps","setState","addEventListener","checkCard","playAudio","onMouseLeave","aria-disabled","cardHandler","WordsList","CategoryPage","timeout","redirect","match","params","changeWords","clearTimeout","setTimeout","getSrcAudio","HardwordsPage","hardwords","MainPage","Th","filterStatistic","Td","Tr","StatisticTable","fields","stateWord","key","StatisticPage","clear","Auth","formRef","React","createRef","current","reset","ref","placeholder","resetForm","Modal","handlerClose","App","routes","path","exact","render","modalOpen","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d68d97e6.chunk.js","sourcesContent":["export interface HeaderState {\n  sidebar: boolean;\n}\n\nexport enum HeaderActionTypes {\n  TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR',\n  SET_SIDEBAR = 'SET_SIDEBAR'\n}\n\ninterface ToggleSidebarAction {\n  type: HeaderActionTypes.TOGGLE_SIDEBAR;\n}\n\ninterface SetSidebarAction {\n  type: HeaderActionTypes.SET_SIDEBAR;\n  value: boolean;\n}\n\n\nexport type HeaderAction = ToggleSidebarAction | SetSidebarAction;","import { HeaderAction, HeaderActionTypes, HeaderState } from \"../../types/header\"\n\nconst initialState: HeaderState = {\n  sidebar: false\n}\n\nexport const headerReducer = (state = initialState, action: HeaderAction): HeaderState => {\n  switch(action.type) {\n    case HeaderActionTypes.TOGGLE_SIDEBAR:\n      return { sidebar: !state.sidebar }\n    case HeaderActionTypes.SET_SIDEBAR:\n      return { sidebar: action.value }\n    default:\n      return state\n  }\n}","import CategoryModel from \"../models/category\";\nimport WordModel from \"../models/word\";\n\nexport interface WordsState {\n  categories: CategoryModel[];\n  words: WordModel[][];\n  wordsCategory?: WordModel[]\n}\n\nexport enum WordsActionTypes {\n  GET_WORDS = \"GET_WORDS\",\n  CLEAR_WORDS_CATEGORY = \"CLEAR_WORDS_CATEGORY\"\n}\n\ninterface GetWordsAction {\n  type: WordsActionTypes.GET_WORDS;\n  payload: WordModel[];\n}\n\ninterface ClearWordsAction {\n  type: WordsActionTypes.CLEAR_WORDS_CATEGORY;\n}\n\nexport type WordsAction = GetWordsAction | ClearWordsAction;","import { WordsState } from \"../types/words\";\n\nconst cards: WordsState = {\n  categories: [\n    {\n      id: \"action-set-a\",\n      name: \"Action (set A)\",\n      image: \"dance.jpg\",\n    },\n    {\n      id: \"action-set-b\",\n      name: \"Action (set B)\",\n      image: \"swim.jpg\",\n    },\n    {\n      id: \"animal-set-a\",\n      name: \"Animal (set A)\",\n      image: \"rabbit.jpg\",\n    },\n    {\n      id: \"animal-set-b\",\n      name: \"Animal (set B)\",\n      image: \"mouse.jpg\",\n    },\n    {\n      id: \"clothes\",\n      name: \"Clothes\",\n      image: \"blouse.jpg\",\n    },\n    {\n      id: \"emotions\",\n      name: \"Emotions\",\n      image: \"happy.jpg\",\n    },\n    {\n      id: \"fruits\",\n      name: \"Fruits\",\n      image: \"pineapple.jpg\",\n    },\n    {\n      id: \"vegetables\",\n      name: \"Vegetables\",\n      image: \"tomato.jpg\",\n    },\n  ],\n  words: [\n    [\n      {\n        id: 1,\n        word: \"cry\",\n        translation: \"плакать\",\n        image: \"cry.jpg\",\n        audioSrc: \"cry.mp3\",\n      },\n      {\n        id: 2,\n        word: \"dance\",\n        translation: \"танцевать\",\n        image: \"dance.jpg\",\n        audioSrc: \"dance.mp3\",\n      },\n      {\n        id: 3,\n        word: \"dive\",\n        translation: \"нырять\",\n        image: \"dive.jpg\",\n        audioSrc: \"dive.mp3\",\n      },\n      {\n        id: 4,\n        word: \"draw\",\n        translation: \"рисовать\",\n        image: \"draw.jpg\",\n        audioSrc: \"draw.mp3\",\n      },\n      {\n        id: 5,\n        word: \"fish\",\n        translation: \"ловить рыбу\",\n        image: \"fish.jpg\",\n        audioSrc: \"fish.mp3\",\n      },\n      {\n        id: 6,\n        word: \"fly\",\n        translation: \"летать\",\n        image: \"fly.jpg\",\n        audioSrc: \"fly.mp3\",\n      },\n      {\n        id: 7,\n        word: \"hug\",\n        translation: \"обнимать\",\n        image: \"hug.jpg\",\n        audioSrc: \"hug.mp3\",\n      },\n      {\n        id: 8,\n        word: \"jump\",\n        translation: \"прыгать\",\n        image: \"jump.jpg\",\n        audioSrc: \"jump.mp3\",\n      },\n    ],\n    [\n      {\n        id: 9,\n        word: \"open\",\n        translation: \"открывать\",\n        image: \"open.jpg\",\n        audioSrc: \"open.mp3\",\n      },\n      {\n        id: 10,\n        word: \"play\",\n        translation: \"играть\",\n        image: \"play.jpg\",\n        audioSrc: \"play.mp3\",\n      },\n      {\n        id: 11,\n        word: \"point\",\n        translation: \"указывать\",\n        image: \"point.jpg\",\n        audioSrc: \"point.mp3\",\n      },\n      {\n        id: 12,\n        word: \"ride\",\n        translation: \"ездить\",\n        image: \"ride.jpg\",\n        audioSrc: \"ride.mp3\",\n      },\n      {\n        id: 13,\n        word: \"run\",\n        translation: \"бегать\",\n        image: \"run.jpg\",\n        audioSrc: \"run.mp3\",\n      },\n      {\n        id: 14,\n        word: \"sing\",\n        translation: \"петь\",\n        image: \"sing.jpg\",\n        audioSrc: \"sing.mp3\",\n      },\n      {\n        id: 15,\n        word: \"skip\",\n        translation: \"пропускать, прыгать\",\n        image: \"skip.jpg\",\n        audioSrc: \"skip.mp3\",\n      },\n      {\n        id: 16,\n        word: \"swim\",\n        translation: \"плавать\",\n        image: \"swim.jpg\",\n        audioSrc: \"swim.mp3\",\n      },\n    ],\n    [\n      {\n        id: 17,\n        word: \"cat\",\n        translation: \"кот\",\n        image: \"cat.jpg\",\n        audioSrc: \"cat.mp3\",\n      },\n      {\n        id: 18,\n        word: \"chick\",\n        translation: \"цыплёнок\",\n        image: \"chick.jpg\",\n        audioSrc: \"chick.mp3\",\n      },\n      {\n        id: 19,\n        word: \"chicken\",\n        translation: \"курица\",\n        image: \"chicken.jpg\",\n        audioSrc: \"chicken.mp3\",\n      },\n      {\n        id: 20,\n        word: \"dog\",\n        translation: \"собака\",\n        image: \"dog.jpg\",\n        audioSrc: \"dog.mp3\",\n      },\n      {\n        id: 21,\n        word: \"horse\",\n        translation: \"лошадь\",\n        image: \"horse.jpg\",\n        audioSrc: \"horse.mp3\",\n      },\n      {\n        id: 22,\n        word: \"pig\",\n        translation: \"свинья\",\n        image: \"pig.jpg\",\n        audioSrc: \"pig.mp3\",\n      },\n      {\n        id: 23,\n        word: \"rabbit\",\n        translation: \"кролик\",\n        image: \"rabbit.jpg\",\n        audioSrc: \"rabbit.mp3\",\n      },\n      {\n        id: 24,\n        word: \"sheep\",\n        translation: \"овца\",\n        image: \"sheep.jpg\",\n        audioSrc: \"sheep.mp3\",\n      },\n    ],\n    [\n      {\n        id: 25,\n        word: \"bird\",\n        translation: \"птица\",\n        image: \"bird.jpg\",\n        audioSrc: \"bird.mp3\",\n      },\n      {\n        id: 26,\n        word: \"fish\",\n        translation: \"рыба\",\n        image: \"fish1.jpg\",\n        audioSrc: \"fish.mp3\",\n      },\n      {\n        id: 27,\n        word: \"frog\",\n        translation: \"жаба\",\n        image: \"frog.jpg\",\n        audioSrc: \"frog.mp3\",\n      },\n      {\n        id: 28,\n        word: \"giraffe\",\n        translation: \"жирафа\",\n        image: \"giraffe.jpg\",\n        audioSrc: \"giraffe.mp3\",\n      },\n      {\n        id: 29,\n        word: \"lion\",\n        translation: \"лев\",\n        image: \"lion.jpg\",\n        audioSrc: \"lion.mp3\",\n      },\n      {\n        id: 30,\n        word: \"mouse\",\n        translation: \"мышь\",\n        image: \"mouse.jpg\",\n        audioSrc: \"mouse.mp3\",\n      },\n      {\n        id: 31,\n        word: \"turtle\",\n        translation: \"черепаха\",\n        image: \"turtle.jpg\",\n        audioSrc: \"turtle.mp3\",\n      },\n      {\n        id: 32,\n        word: \"dolphin\",\n        translation: \"дельфин\",\n        image: \"dolphin.jpg\",\n        audioSrc: \"dolphin.mp3\",\n      },\n    ],\n    [\n      {\n        id: 33,\n        word: \"skirt\",\n        translation: \"юбка\",\n        image: \"skirt.jpg\",\n        audioSrc: \"skirt.mp3\",\n      },\n      {\n        id: 34,\n        word: \"pants\",\n        translation: \"брюки\",\n        image: \"pants.jpg\",\n        audioSrc: \"pants.mp3\",\n      },\n      {\n        id: 35,\n        word: \"blouse\",\n        translation: \"блузка\",\n        image: \"blouse.jpg\",\n        audioSrc: \"blouse.mp3\",\n      },\n      {\n        id: 36,\n        word: \"dress\",\n        translation: \"платье\",\n        image: \"dress.jpg\",\n        audioSrc: \"dress.mp3\",\n      },\n      {\n        id: 37,\n        word: \"boot\",\n        translation: \"ботинок\",\n        image: \"boot.jpg\",\n        audioSrc: \"boot.mp3\",\n      },\n      {\n        id: 38,\n        word: \"shirt\",\n        translation: \"рубашка\",\n        image: \"shirt.jpg\",\n        audioSrc: \"shirt.mp3\",\n      },\n      {\n        id: 39,\n        word: \"coat\",\n        translation: \"пальто\",\n        image: \"coat.jpg\",\n        audioSrc: \"coat.mp3\",\n      },\n      {\n        id: 40,\n        word: \"shoe\",\n        translation: \"туфли\",\n        image: \"shoe.jpg\",\n        audioSrc: \"shoe.mp3\",\n      },\n    ],\n    [\n      {\n        id: 41,\n        word: \"sad\",\n        translation: \"грустный\",\n        image: \"sad.jpg\",\n        audioSrc: \"sad.mp3\",\n      },\n      {\n        id: 42,\n        word: \"angry\",\n        translation: \"сердитый\",\n        image: \"angry.jpg\",\n        audioSrc: \"angry.mp3\",\n      },\n      {\n        id: 43,\n        word: \"happy\",\n        translation: \"счастливый\",\n        image: \"happy.jpg\",\n        audioSrc: \"happy.mp3\",\n      },\n      {\n        id: 44,\n        word: \"tired\",\n        translation: \"уставший\",\n        image: \"tired.jpg\",\n        audioSrc: \"tired.mp3\",\n      },\n      {\n        id: 45,\n        word: \"surprised\",\n        translation: \"удивлённый\",\n        image: \"surprised.jpg\",\n        audioSrc: \"surprised.mp3\",\n      },\n      {\n        id: 46,\n        word: \"scared\",\n        translation: \"испуганный\",\n        image: \"scared.jpg\",\n        audioSrc: \"scared.mp3\",\n      },\n      {\n        id: 47,\n        word: \"smile\",\n        translation: \"улыбка\",\n        image: \"smile.jpg\",\n        audioSrc: \"smile.mp3\",\n      },\n      {\n        id: 48,\n        word: \"laugh\",\n        translation: \"смех\",\n        image: \"laugh.jpg\",\n        audioSrc: \"laugh.mp3\",\n      },\n    ],\n    [\n      {\n        id: 49,\n        word: \"pineapple\",\n        translation: \"ананас\",\n        image: \"pineapple.jpg\",\n        audioSrc: \"pineapple.mp3\",\n      },\n      {\n        id: 50,\n        word: \"orange\",\n        translation: \"апельсин\",\n        image: \"orange.jpg\",\n        audioSrc: \"orange.mp3\",\n      },\n      {\n        id: 51,\n        word: \"apple\",\n        translation: \"яблоко\",\n        image: \"apple.jpg\",\n        audioSrc: \"apple.mp3\",\n      },\n      {\n        id: 52,\n        word: \"banana\",\n        translation: \"банан\",\n        image: \"banana.jpg\",\n        audioSrc: \"banana.mp3\",\n      },\n      {\n        id: 53,\n        word: \"kiwi\",\n        translation: \"киви\",\n        image: \"kiwi.jpg\",\n        audioSrc: \"kiwi.mp3\",\n      },\n      {\n        id: 54,\n        word: \"grapes\",\n        translation: \"виноград\",\n        image: \"grapes.jpg\",\n        audioSrc: \"grapes.mp3\",\n      },\n      {\n        id: 55,\n        word: \"coconut\",\n        translation: \"кокос\",\n        image: \"coconut.jpg\",\n        audioSrc: \"coconut.mp3\",\n      },\n      {\n        id: 56,\n        word: \"pear\",\n        translation: \"груша\",\n        image: \"pear.jpg\",\n        audioSrc: \"pear.mp3\",\n      },\n    ],\n    [\n      {\n        id: 57,\n        word: \"potato\",\n        translation: \"картофель\",\n        image: \"potato.jpg\",\n        audioSrc: \"potato.mp3\",\n      },\n      {\n        id: 58,\n        word: \"tomato\",\n        translation: \"помидор\",\n        image: \"tomato.jpg\",\n        audioSrc: \"tomato.mp3\",\n      },\n      {\n        id: 59,\n        word: \"eggplant\",\n        translation: \"баклажан\",\n        image: \"eggplant.jpg\",\n        audioSrc: \"eggplant.mp3\",\n      },\n      {\n        id: 60,\n        word: \"corn\",\n        translation: \"кукуруза\",\n        image: \"corn.jpg\",\n        audioSrc: \"corn.mp3\",\n      },\n      {\n        id: 61,\n        word: \"carrot\",\n        translation: \"морковь\",\n        image: \"carrot.jpg\",\n        audioSrc: \"carrot.mp3\",\n      },\n      {\n        id: 62,\n        word: \"mushroom\",\n        translation: \"гриб\",\n        image: \"mushroom.jpg\",\n        audioSrc: \"mushroom.mp3\",\n      },\n      {\n        id: 63, \n        word: \"pea\",\n        translation: \"горох\",\n        image: \"pea.jpg\",\n        audioSrc: \"pea.mp3\",\n      },\n      {\n        id: 64,\n        word: \"onion\",\n        translation: \"лук\",\n        image: \"onion.jpg\",\n        audioSrc: \"onion.mp3\",\n      },\n    ],\n  ],\n};\n\nexport default cards;\n","import cards from \"../../data/cards\"\nimport { WordsAction, WordsActionTypes, WordsState } from \"../../types/words\"\n\nconst initialState: WordsState = cards\n\nexport const wordsReducer = (state = initialState, action: WordsAction): WordsState => {\n  switch(action.type) {\n    case WordsActionTypes.GET_WORDS:\n      return { ...state, wordsCategory: action.payload }\n    case WordsActionTypes.CLEAR_WORDS_CATEGORY:\n      return { ...state, wordsCategory: undefined }\n    default:\n      return state\n  }\n}","import WordModel from \"../models/word\";\n\nexport interface PlayState {\n  playMode: boolean;\n  start: boolean;\n  errors: number;\n  activeWord?: WordModel;\n  checks: boolean[];\n  endGame?: boolean;\n  words?: WordModel[];\n}\n\nexport enum PlayActionTypes {\n  TOGGLE_PLAY_MODE = \"TOGGLE_PLAY_MODE\",\n  PLAY_GAME = \"PLAY_GAME\",\n  RANDOM_WORD = \"RANDOM_WORD\",\n  PLAY_SOUND = \"PLAY_SOUND\",\n  CHECK_WORD = \"CHECK_WORD\",\n  END_GAME = \"END_GAME\",\n  RESUME_GAME = \"RESUME_GAME\"\n}\n\ninterface TogglePlayModeAction {\n  type: PlayActionTypes.TOGGLE_PLAY_MODE;\n}\n\ninterface PlayGameAction {\n  type: PlayActionTypes.PLAY_GAME;\n  words: WordModel[];\n}\n\ninterface RandomWordAction {\n  type: PlayActionTypes.RANDOM_WORD,\n  randomWord: WordModel;\n}\n\ninterface PlaySoundAction {\n  type: PlayActionTypes.PLAY_SOUND;\n}\n\ninterface CheckWordAction {\n  type: PlayActionTypes.CHECK_WORD;\n  checkWord: boolean;\n  word: WordModel;\n}\n\ninterface EndGameAction {\n  type: PlayActionTypes.END_GAME;\n}\n\ninterface ResumeGameAction {\n  type: PlayActionTypes.RESUME_GAME;\n}\n\nexport type PlayAction = TogglePlayModeAction | PlayGameAction | CheckWordAction | PlaySoundAction | EndGameAction | RandomWordAction | ResumeGameAction;\n","import { PlayAction, PlayActionTypes, PlayState } from \"../../types/play\"\n\nconst initialState: PlayState = {\n  playMode: false,\n  start: false,\n  words: [],\n  errors: 0,\n  checks: []\n}\n\nexport const playReducer = (state = initialState, action: PlayAction): PlayState => {\n  switch(action.type) {\n    case PlayActionTypes.TOGGLE_PLAY_MODE:\n      return { ...state, playMode: !state.playMode }\n    case PlayActionTypes.PLAY_GAME:\n      return {...state, start: true, words: action.words };\n    case PlayActionTypes.RANDOM_WORD:\n      return { ...state, activeWord: action.randomWord }\n    case PlayActionTypes.PLAY_SOUND:\n      return state\n    case PlayActionTypes.CHECK_WORD:\n      if(action.checkWord) {\n        return {\n          ...state,\n          words: state.words?.filter(word => word !== action.word),\n          checks: [...state.checks, action.checkWord]\n        }\n      }\n      return { ...state, errors: state.errors + 1, checks: [...state.checks, action.checkWord] }\n    case PlayActionTypes.END_GAME:\n      return { ...state, endGame: true }\n    case PlayActionTypes.RESUME_GAME:\n      return { ...initialState, playMode: state.playMode }\n    default:\n      return state\n  }\n}","import { WordStateModel } from \"../models/word-state\";\n\nexport interface StatisticState {\n  data: WordStateModel[];\n  fieldFilter?: string;\n  ascFilter?: boolean;\n}\n\nexport enum StatisticActionTypes {\n  FETCH_STATISTIC = \"FETCH_STATISTIC\",\n  FILTER_STATISTIC = \"FILTER_STATISTIC\"\n}\n\ninterface FetchStatisticAction {\n  type: StatisticActionTypes.FETCH_STATISTIC;\n  data: WordStateModel[];\n}\n\ninterface FilterStatisticAction {\n  type: StatisticActionTypes.FILTER_STATISTIC;\n  field?: string,\n  asc?: boolean\n}\n\n\nexport type StatisticAction = FetchStatisticAction | FilterStatisticAction;\n","import { StatisticState, StatisticAction, StatisticActionTypes } from \"../../types/statistic\"\n\nconst initialState: StatisticState = {\n  data: []\n}\n\nexport const statisticReducer = (state = initialState, action: StatisticAction): StatisticState => {\n  switch(action.type) {\n    case StatisticActionTypes.FETCH_STATISTIC:\n      return { ...state, data: action.data }\n    case StatisticActionTypes.FILTER_STATISTIC:\n      return { ...state, fieldFilter: action.field, ascFilter: action.asc }\n    default:\n      return state\n  }\n}","export interface ModalState {\n  open: boolean;\n}\n\nexport enum ModalActionTypes {\n  TOGGLE_MODAL = 'TOGGLE_MODAL',\n  SET_OPEN_MODAL= 'SET_OPEN_MODAL'\n}\n\ninterface ToggleModalAction {\n  type: ModalActionTypes.TOGGLE_MODAL;\n}\n\ninterface SetOpenModalAction {\n  type: ModalActionTypes.SET_OPEN_MODAL;\n  value: boolean;\n}\n\n\nexport type ModalAction = ToggleModalAction | SetOpenModalAction;","import { ModalAction, ModalActionTypes, ModalState } from \"../../types/modal\"\n\nconst initialState: ModalState = {\n  open: false\n}\n\nexport const modalReducer = (state = initialState, action: ModalAction): ModalState => {\n  switch(action.type) {\n    case ModalActionTypes.TOGGLE_MODAL:\n      return { open: !state.open }\n    case ModalActionTypes.SET_OPEN_MODAL:\n      return { open: action.value }\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\";\n\nimport { headerReducer } from './headerReducer';\nimport { wordsReducer } from \"./wordsReducer\";\nimport { playReducer } from \"./playReducer\";\nimport { statisticReducer } from \"./statisticReducer\";\nimport { modalReducer } from \"./modalReducer\";\n\nexport const rootReducer = combineReducers({\n  header: headerReducer,\n  words: wordsReducer,\n  play: playReducer,\n  statistic: statisticReducer,\n  modal: modalReducer\n})\n\n\nexport type RootState = ReturnType<typeof rootReducer>","import {createStore} from 'redux';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer)","import { store } from \"..\";\nimport cards from \"../../data/cards\";\nimport WordModel from \"../../models/word\";\nimport { WordsActionTypes } from \"../../types/words\";\n\nexport const getWords = (id: number) => {\n  const indexCategory = cards.categories.findIndex((category) => category.id === id);\n  const wordsCategory = cards.words.find((wordsCategory: WordModel[], index) => index === indexCategory);\n  if(wordsCategory) return store.dispatch({ type: WordsActionTypes.GET_WORDS, payload: wordsCategory });\n}\n\nexport const getWord = (categoryName: string, wordName: string) => {\n  const indexCategory = cards.categories.findIndex((category) => category.name === categoryName);\n  const word = cards.words[indexCategory].find((word: WordModel) => word.word === wordName);\n  return word;\n}\n\nexport const clearWords = () => {\n  return store.dispatch({ type: WordsActionTypes.CLEAR_WORDS_CATEGORY })\n}","import { store } from \"..\";\nimport { LSStateModel } from \"../../models/ls-state\";\nimport WordModel from \"../../models/word\";\nimport { WordStateModel } from \"../../models/word-state\";\nimport { StatisticActionTypes } from \"../../types/statistic\";\nimport { getWord } from \"./words\";\n\nfunction getPercentage(correct: number, incorrect: number): number {\n  return (correct * 100) / (correct + incorrect);\n}\n\nexport const addStatisticLS = (type: string, word: WordModel) => {\n  if (word) {\n    const id = word.id.toString()\n    let stringState = localStorage.getItem(id);\n    if (!stringState) {\n      stringState = JSON.stringify({\n        correct: 0,\n        incorrect: 0,\n        trained: 0,\n      });\n      localStorage.setItem(id, JSON.stringify(stringState));\n    }\n    let parseState = JSON.parse(stringState) as LSStateModel;\n    switch (type) {\n      case \"correct\":\n        parseState.correct += 1;\n        break;\n      case \"incorrect\":\n        parseState.incorrect += 1;\n        break;\n      default:\n        parseState.trained += 1;\n        break;\n    }\n    localStorage.setItem(id, JSON.stringify(parseState));\n  }\n};\n\nexport const resetStatistic = () => {\n  localStorage.clear();\n  store.dispatch({\n    type: StatisticActionTypes.FILTER_STATISTIC,\n    field: undefined,\n    asc: undefined,\n  });\n  fetchStatistic();\n};\n\nexport const getHardWords = (): WordModel[] => {\n  let hardWords = fetchStatistic()\n    .sort((a: WordStateModel, b: WordStateModel) => {\n      if (a.incorrect < b.incorrect) return 1;\n      return -1;\n    })\n    .filter(\n      (wordState: WordStateModel) =>\n        wordState.percentage > 0 && wordState.percentage < 100\n    )\n    .slice(0, 8)\n    .map((wordState: WordStateModel) =>\n      getWord(wordState.category, wordState.word)\n    )\n    .filter((word: WordModel | undefined) => word !== undefined);\n\n  return hardWords as WordModel[];\n};\n\nexport const fetchStatistic = (fieldFilter?: string, ascFilter?: boolean) => {\n  const wordsState = store.getState().words;\n  const categories = wordsState.categories;\n  const words = wordsState.words;\n  let statistic = words\n    .map((wordsCategory: WordModel[], index: number) => {\n      return wordsCategory.map((word: WordModel) => {\n        const id = word.id.toString()\n        let wordStatisticLS = localStorage.getItem(id);\n        if (!wordStatisticLS) {\n          const wordStatistic = JSON.stringify({\n            trained: 0,\n            correct: 0,\n            incorrect: 0,\n          });\n          localStorage.setItem(id, wordStatistic);\n          wordStatisticLS = wordStatistic;\n        }\n        const parseWord = JSON.parse(wordStatisticLS) as LSStateModel;\n        return {\n          category: categories[index].name,\n          word: word.word,\n          translation: word.translation,\n          trained: parseWord.trained,\n          correct: parseWord.correct,\n          incorrect: parseWord.incorrect,\n          percentage: getPercentage(parseWord.correct, parseWord.incorrect),\n        };\n      });\n    })\n    .flat();\n  if (fieldFilter) {\n    statistic = statistic.sort(\n      (a: WordStateModel, b: WordStateModel) =>\n        (a[fieldFilter] > b[fieldFilter] && (ascFilter ? 1 : -1)) ||\n        (ascFilter ? -1 : 1)\n    );\n  }\n  store.dispatch({\n    type: StatisticActionTypes.FETCH_STATISTIC,\n    data: statistic,\n  });\n  return statistic;\n};\n\nexport const filterStatistic = (field, asc = true) => {\n  return store.dispatch({\n    type: StatisticActionTypes.FILTER_STATISTIC,\n    field: field,\n    asc: asc,\n  });\n};\n","import { store } from \"..\";\nimport WordModel from \"../../models/word\";\nimport { PlayActionTypes } from \"../../types/play\";\nimport { addStatisticLS } from \"./statistic\";\n\nexport const togglePlayMode = () => {\n  store.dispatch({ type: PlayActionTypes.TOGGLE_PLAY_MODE });\n  resumeGame();\n}\n\nexport const play = () => {\n  let words = store.getState().words.wordsCategory;\n  (words && randomWord) && store.dispatch({ type: PlayActionTypes.PLAY_GAME, words: words })\n  randomWord();\n}\n\nexport const randomWord = () => {\n  const words = store.getState().play.words;\n  if(words) {\n    const randomWord = words[Math.floor(Math.random() * words.length)];\n    (words && randomWord) && store.dispatch({ type: PlayActionTypes.RANDOM_WORD, randomWord: randomWord })\n    playSound();\n  }\n}\n\nexport const playSound = () => {\n  const activeWord = store.getState().play.activeWord;\n  if(activeWord) {\n    const audio = new Audio(`/assets/${activeWord?.audioSrc}`);\n    audio.src = `https://wooordhunt.ru/data/sound/sow/uk/${activeWord?.word}.mp3`;\n    audio.play();\n  }\n}\n\nexport const checkWord = (word: WordModel) => {\n  const activeWord = store.getState().play.activeWord;\n  store.dispatch({ type: PlayActionTypes.CHECK_WORD, checkWord: activeWord === word, word: word })\n  \n  const words = store.getState().play.words;\n  if(words && words.length > 0) {\n    if(activeWord === word) {\n      const audio = new Audio(`/assets/audio/success.wav`);\n      audio.addEventListener('ended', () => randomWord());\n      audio.play();\n    }\n  } else {\n    endGame();\n  }\n\n  if(activeWord) addStatisticLS(activeWord === word ? 'correct' : 'incorrect', activeWord);\n\n  return activeWord === word;\n}\n\nexport const endGame = () => {\n  store.dispatch({ type: PlayActionTypes.END_GAME })\n}\n\nexport const resumeGame = () => {\n  return store.dispatch({ type: PlayActionTypes.RESUME_GAME })\n}","import React, { Component } from 'react'\nimport { togglePlayMode } from '../../store/actions/play';\n\nimport './switch-box.scss';\n\ninterface SwithBoxProps {\n  checked?: boolean\n}\n\nexport class SwitchBox extends Component<SwithBoxProps> {\n  render() {\n    return (\n      <>\n        <label className=\"switch\" >\n          <input type=\"checkbox\" checked={this.props.checked} onChange={() => togglePlayMode()}/>\n          <span className=\"slider round\">{this.props.checked ? <span>Train</span> : <span>Play</span>}</span>\n        </label>\n      </>\n    )\n  }\n}\n\n\n\nexport default SwitchBox;\n","import { store } from \"..\";\nimport { HeaderActionTypes } from \"../../types/header\";\n\nexport const toggleSidebar = () => {\n  return store.dispatch({ type: HeaderActionTypes.TOGGLE_SIDEBAR });\n}\n\nexport const setSidebar = (value: boolean) => {\n  return store.dispatch({ type: HeaderActionTypes.SET_SIDEBAR, value: value });\n}","import React, { Component, MouseEventHandler } from \"react\";\n\nimport './button.scss';\n\ninterface ButtonProps {\n  className?: string;\n  thema?: \"primary\" | \"sidebar\" | \"round\" | \"danger\";\n  onClick?: MouseEventHandler;\n  children?: any;\n  disabled?: boolean;\n}\n\nexport default class Button extends Component<ButtonProps> {\n  render() {\n    return (\n      <button\n        onClick={this.props.onClick}\n        className={`btn btn--${\n          this.props.thema ? this.props.thema : \"primary\"\n        } ${this.props.className || ''}`}\n        disabled={this.props.disabled}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n","const defaultFolder = '/assets';\n\nexport const getSrcAudio = (audio: string, online: boolean = false): string => {\n  if(online) return `https://wooordhunt.ru/data/sound/sow/uk/${audio}`;\n  return `${defaultFolder}/audio/${audio}`;\n}\n\nexport const getSrcImageWord = (image: string): string => {\n  return `${defaultFolder}/img/words/${image}`;\n}\n\nexport const getSrcImage = (image: string): string => {\n  return `${defaultFolder}/img/${image}`;\n}\n\nexport const getSrcImageIcon = (image: string): string => {\n  return `${defaultFolder}/img/icons/${image}`;\n}","import React, { Component } from \"react\";\nimport { SwitchBox } from \"../switch-box/SwitchBox\";\nimport { connect } from \"react-redux\";\nimport { toggleSidebar } from \"../../store/actions/header\";\n\nimport \"./header.scss\";\nimport { play, playSound } from \"../../store/actions/play\";\n\nimport { Link } from \"react-router-dom\";\nimport WordModel from \"../../models/word\";\nimport Button from \"../button/Button\";\nimport { getSrcImageIcon } from \"../../utils/getSrc\";\n\ninterface HeaderProps {\n  playMode: boolean;\n  start: boolean;\n  words?: WordModel[];\n  sidebar: boolean;\n}\n\nclass Header extends Component<HeaderProps> {\n  render() {\n    return (\n      <>\n        <header className=\"header\" id=\"header\">\n          <nav className=\"nav container\">\n            <div onClick={() => toggleSidebar()} className={`nav__toggle ${this.props.sidebar ? 'close' : ''}`}>\n              <span className=\"nav__toggle-item\"></span>\n              <span className=\"nav__toggle-item\"></span>\n              <span className=\"nav__toggle-item\"></span>\n            </div>\n            <div className=\"nav__btns\">\n              <SwitchBox checked={!this.props.playMode} />\n              {this.props.playMode ? (\n                <Button\n                  className=\"nav__btns-start\"\n                  onClick={() => (this.props.start ? playSound() : play())}\n                  disabled={!this.props.words}\n                  thema=\"round\"\n                >\n                  {this.props.start ? (\n                    <img src={getSrcImageIcon(\"repeat.svg\")} alt=\"Audio\" />\n                  ) : (\n                    \"Start\"\n                  )}\n                </Button>\n              ) : null}\n              <Link to=\"/statistic\" className=\"btn btn--primary nav__btn\">\n                State\n              </Link>\n            </div>\n          </nav>\n        </header>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playMode: state.play.playMode,\n  start: state.play.start,\n  words: state.words.wordsCategory,\n  sidebar: state.header.sidebar\n});\n\nexport default connect(mapStateToProps)(Header);\n","import { store } from \"..\";\nimport { ModalActionTypes } from \"../../types/modal\";\n\nexport const toggleModal = () => {\n  return store.dispatch({ type: ModalActionTypes.TOGGLE_MODAL });\n}\n\nexport const setOpenModel = (value: boolean) => {\n  return store.dispatch({ type: ModalActionTypes.SET_OPEN_MODAL, value: value });\n}","import React, { Component } from 'react';\n\nimport './card.scss';\n\nclass Card extends Component<{ class?: string }> {\n  render() {\n    return (\n      <div className={this.props.class ? `card ${this.props.class}`: `card`}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport Card from \"../../card/Card\";\n\nimport { NavLink} from 'react-router-dom';\n\nimport \"./menu-item.scss\";\nimport { setSidebar } from \"../../../store/actions/header\";\n\ninterface MenuItemProps {\n  title: string;\n  href: string;\n  card?: boolean;\n  image?: string;\n}\n\nclass MenuItem extends Component<MenuItemProps> {\n  render() {\n    return <li className=\"menu__item\">\n      <NavLink to={this.props.href} className='menu__item-link' onClick={() => setSidebar(false)}>\n        {this.props.card ? <Card class=\"menu__item-card\">\n          <img src={this.props.image} alt={this.props.title} />\n          {this.props.title}\n        </Card> : this.props.title}\n      </NavLink>\n    </li>\n  }\n}\n\n\nexport default MenuItem;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CategoryModel from '../../models/category';\nimport { getSrcImageWord } from '../../utils/getSrc';\nimport MenuItem from './menu-item/MenuItem';\n\nimport './menu-items.scss';\n\ninterface MenuItemsProps {\n  categories: CategoryModel[],\n  visibleCard?: boolean,\n  class?: string,\n  children?: any\n}\n\nclass MenuItems extends Component<MenuItemsProps> {\n  render() {\n    return (\n      <ul className={this.props.class ? `menu__list ${this.props.class}` : `menu__list`}>\n        {this.props.children}\n        { this.props.categories.map(\n            (category: CategoryModel, index) => (\n              <MenuItem key={index} title={category.name} image={getSrcImageWord(category.image)} href={`/categories/${category.id}`} card={this.props.visibleCard} />\n            )\n          )\n        }\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    categories: state.words.categories\n})}\nexport default connect(mapStateToProps)(MenuItems);","import React, { Component } from \"react\";\nimport { setSidebar, toggleSidebar } from \"../../store/actions/header\";\nimport { setOpenModel } from \"../../store/actions/modal\";\nimport Button from \"../button/Button\";\nimport MenuItem from \"../menu-items/menu-item/MenuItem\";\nimport MenuItems from \"../menu-items/MenuItems\";\n\nimport './sidebar.scss';\n\ntype MenuProps = {\n  open: boolean;\n};\n\n\nexport class Sidebar extends Component<MenuProps> {\n  render() {\n    return (\n      <aside className={`sidebar ${ this.props.open ? 'show' : 'hidden'}`} onClick={ () => toggleSidebar() }>\n        <div className=\"sidebar__inner\" onClick={((e) => e.stopPropagation())}>\n          <MenuItems>\n            <MenuItem title=\"Main page\" href=\"/home\" />\n          </MenuItems>\n\n          <div className=\"sidebar__btns\">\n            <Button thema='sidebar' onClick={() => {\n              setSidebar(false);\n              setOpenModel(true)\n            }} className=\"sidebar__btn\">Login</Button>\n          </div>\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./checks-bar.scss\";\n\ninterface ChecksBarProps {\n  checks: boolean[];\n}\n\nclass ChecksBar extends Component<ChecksBarProps> {\n  render() {\n    return (\n      <div className=\"checks-bar\">\n        {this.props.checks.map((check, index) => (\n          <div className=\"checks-bar__item\" key={index}>\n            {check ? <span>&#9733;</span> : <span>&#9734;</span>}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  checks: state.play.checks,\n});\n\nexport default connect(mapStateToProps)(ChecksBar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport WordModel from \"../../../models/word\";\nimport { checkWord } from \"../../../store/actions/play\";\nimport Card from \"../../card/Card\";\n\nimport { addStatisticLS } from \"../../../store/actions/statistic\";\nimport { getSrcImageIcon, getSrcImageWord } from \"../../../utils/getSrc\";\nimport Button from \"../../button/Button\";\n\nimport \"./word-item.scss\";\n\ninterface WordProps {\n  word: WordModel;\n  playMode: boolean;\n  start: boolean;\n}\n\nclass WordItem extends Component<WordProps> {\n  state = {\n    ...this.props.word,\n    playing: false,\n    flipped: false,\n    disabled: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.word !== prevProps.word) {\n      this.setState({ ...this.props.word, disabled: false });\n    }\n    if (this.props.start !== prevProps.start) {\n      this.setState({ disabled: false });\n    }\n  }\n\n  playAudio() {\n    if (!this.state.playing) {\n      let audio = new Audio();\n      audio.src = `https://wooordhunt.ru/data/sound/sow/uk/${this.state.word}.mp3`\n      this.setState({ playing: true });\n      audio.addEventListener(\"ended\", () => this.setState({ playing: false }));\n      audio.play();\n    }\n  }\n\n  checkCard() {\n    if (checkWord(this.props.word)) {\n      this.setState({ disabled: true });\n    } else {\n      new Audio(`/assets/audio/error.wav`).play();\n    }\n  }\n\n  cardHandler() {\n    if (!this.props.playMode) {\n      this.playAudio();\n      addStatisticLS(\"trained\", this.props.word);\n    } else if (this.props.start) {\n      this.checkCard();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={this.state.flipped ? `word flipped` : `word`}\n        onMouseLeave={() => this.setState({ flipped: false })}\n        aria-disabled={this.state.disabled}\n      >\n        <Card class=\"word__card\">\n          <div className=\"word__front\" onClick={() => this.cardHandler()}>\n            <div className=\"word__front-header\">\n              <img src={getSrcImageWord(this.state.image)} alt={this.state.image} />\n            </div>\n            {!this.props.playMode && (\n              <div className=\"word__front-footer\">\n                <span className=\"word__name\">{this.state.word}</span>\n                <Button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    this.setState({ flipped: true });\n                  }}\n                >\n                  <img src={getSrcImageIcon(\"rotate.svg\")} alt=\"Rotate\" />\n                </Button>\n              </div>\n            )}\n          </div>\n          <div className=\"word__back\">{this.state.translation}</div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playMode: state.play.playMode,\n  start: state.play.start,\n});\n\nexport default connect(mapStateToProps)(WordItem);\n","import React, { Component } from 'react';\nimport WordModel from '../../models/word';\nimport WordItem from './word-item/WordItem';\n\ninterface WordsListParams {\n  words: WordModel[]\n}\n\nclass WordsList extends Component<WordsListParams> {\n  state = {\n    words: []\n  }\n\n  componentDidMount() {\n    this.setState({ words: this.props.words })\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props !== prevProps) {\n      this.setState({ words: this.props.words })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"words__list grid\">\n        { this.state.words.map((word: WordModel, index) => <WordItem key={index} word={word} />)}\n      </div>\n    );\n  }\n}\n\nexport default WordsList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ChecksBar from '../components/checks-bar/ChecksBar';\nimport WordsList from '../components/words-list/WordsList';\nimport WordModel from '../models/word';\nimport { resumeGame } from '../store/actions/play';\nimport { clearWords, getWords } from '../store/actions/words';\nimport { Redirect } from 'react-router-dom';\nimport { getSrcAudio, getSrcImage } from '../utils/getSrc';\n\ninterface CategoryPageState {\n  words?: WordModel[],\n  redirect: boolean\n}\n\ninterface CategoryPageProps {\n  match: any,\n  start: boolean,\n  errors: number,\n  endGame?: boolean\n}\n\nclass CategoryPage extends Component<CategoryPageProps, CategoryPageState> {\n  private timeout?: ReturnType<typeof setTimeout>;\n\n  state = {\n    words: [],\n    redirect: false\n  }\n\n  changeWords() {\n    const category = this.props.match.params.category;\n    this.setState({ words: getWords(category)?.payload || []})\n  }\n\n  componentDidMount() {\n    this.changeWords();\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.match.params.category !== prevProps.match.params.category) {\n      resumeGame();\n      this.changeWords();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timeout) clearTimeout(this.timeout);\n    resumeGame();\n    clearWords();\n  }\n\n  render() {\n    if(this.state.redirect) {\n      return <Redirect to='/home' />\n    }\n    if (this.props.endGame) {\n      this.timeout = setTimeout(() => {\n        this.setState({ redirect: true });\n      }, 3000);\n\n      new Audio(getSrcAudio(this.props.errors > 0 ? 'error.mp3' : 'success.mp3')).play();\n\n      return (\n        <>\n          <div className=\"result\">\n            <img\n              src={getSrcImage(\n                this.props.errors > 0 ? \"sad.svg\" : \"happy.svg\"\n              )}\n              alt=\"Result\"\n            />\n            <span className=\"result-page__error\">\n              {this.props.errors} Errors\n            </span>\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <ChecksBar />\n        <WordsList words={this.state.words} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  start: state.play.start,\n  errors: state.play.errors,\n  endGame: state.play.endGame\n})\nexport default connect(mapStateToProps)(CategoryPage);","import React, { Component } from 'react'\nimport WordsList from '../components/words-list/WordsList'\nimport WordModel from '../models/word'\nimport { getHardWords } from '../store/actions/statistic'\n\nclass HardwordsPage extends Component<{}, { hardwords: WordModel[] }> {\n  state = {\n    hardwords: []\n  }\n\n  componentDidMount() {\n    this.setState({ hardwords: getHardWords() })\n  }\n\n  render() {\n    return (\n      <>\n        <WordsList words={this.state.hardwords} />\n      </>\n    )\n  }\n}\n\nexport default HardwordsPage;\n","import React, { Component } from 'react';\nimport MenuItems from '../components/menu-items/MenuItems';\n\nclass MainPage extends Component {\n  render() {\n    return (\n      <>\n        <MenuItems visibleCard={true} class='grid' />\n      </>\n    );\n  }\n}\n\nexport default MainPage;","import React, { Component } from 'react'\nimport { filterStatistic } from '../../../store/actions/statistic'\n\nimport './th.scss';\n\ninterface ThProps {\n  field: string,\n  fieldFilter?: string;\n  ascFilter?: boolean;\n}\n\nclass Th extends Component<ThProps> {\n  state = {\n    asc: true\n  }\n\n  filterStatistic() {\n    filterStatistic(this.props.field, this.state.asc);\n    this.setState({ asc: !this.state.asc });\n  }\n\n  render() {\n    return (\n      <th onClick={() => this.filterStatistic()}>\n        {this.props.children} { this.props.fieldFilter === this.props.field && (this.props.ascFilter ? <i className=\"arrow up\"></i> : <i className=\"arrow down\"></i>) }\n      </th>\n    )\n  }\n}\n\nexport default Th;\n","import React, { Component } from 'react'\n\nexport default class Td extends Component {\n  render() {\n    return (\n      <td>\n        {this.props.children}\n      </td>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { WordStateModel } from '../../../models/word-state';\nimport Td from '../td/Td'\n\nexport default class Tr extends Component<WordStateModel> {\n  render() {\n    return (\n      <tr>\n        <Td>{this.props.category}</Td>\n        <Td>{this.props.word}</Td>\n        <Td>{this.props.translation}</Td>\n        <Td>{this.props.trained}</Td>\n        <Td>{this.props.correct}</Td>\n        <Td>{this.props.incorrect}</Td>\n        <Td>{this.props.percentage | 0}</Td>\n      </tr>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WordStateModel } from \"../../models/word-state\";\nimport { fetchStatistic } from \"../../store/actions/statistic\";\n\nimport \"./statistic-table.scss\";\nimport Th from \"./th/Th\";\nimport Tr from \"./tr/Tr\";\n\ninterface FieldlModel {\n  title: string;\n  field: string;\n}\n\ninterface StatisticTableState {\n  fields: FieldlModel[];\n}\n\ninterface StatisticTableProps {\n  statistic: WordStateModel[];\n  fieldFilter?: string;\n  ascFilter?: boolean;\n}\n\nclass StatisticTable extends Component<\n  StatisticTableProps,\n  StatisticTableState\n> {\n  state = {\n    fields: [\n      {\n        title: \"Category\",\n        field: \"category\",\n      },\n      {\n        title: \"Word\",\n        field: \"word\",\n      },\n      {\n        title: \"Translation\",\n        field: \"translation\",\n      },\n      {\n        title: \"Trained\",\n        field: \"trained\",\n      },\n      {\n        title: \"Correct\",\n        field: \"correct\",\n      },\n      {\n        title: \"Incorrect\",\n        field: \"incorrect\",\n      },\n      {\n        title: \"%\",\n        field: \"percentage\",\n      },\n    ],\n  };\n\n  componentDidMount() {\n    fetchStatistic();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.fieldFilter !== prevProps.fieldFilter ||\n      this.props.ascFilter !== prevProps.ascFilter\n    ) {\n      fetchStatistic(this.props.fieldFilter, this.props.ascFilter);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"statistic-table__block\">\n        <table>\n          <thead>\n            <tr>\n              {this.state.fields.map((field: FieldlModel, index: number) => (\n                <Th\n                  key={index}\n                  field={field.field}\n                  fieldFilter={this.props.fieldFilter}\n                  ascFilter={this.props.ascFilter}\n                >\n                  {field.title}\n                </Th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.statistic.map(\n              (stateWord: WordStateModel, index: number) => (\n                <Tr {...stateWord} key={index} />\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  statistic: state.statistic.data,\n  fieldFilter: state.statistic.fieldFilter,\n  ascFilter: state.statistic.ascFilter,\n});\n\nexport default connect(mapStateToProps)(StatisticTable);\n","import React, { Component } from 'react'\nimport StatisticTable from '../components/statistic-table/StatisticTable'\nimport { resetStatistic } from '../store/actions/statistic'\n\nimport { Link } from 'react-router-dom';\nimport Button from '../components/button/Button';\n \n\nexport default class StatisticPage extends Component {\n  render() {\n    return (\n      <main className=\"statistic-page container\">\n        <div className=\"row row--flex-end\">\n          <Link to='/hardwords' className=\"btn btn--primary\">Repeat difficult words</Link>\n          <Button onClick={() => resetStatistic()}>Reset</Button>\n        </div>\n        <StatisticTable />\n      </main>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Button from '../button/Button';\nimport './auth.scss';\n\nclass Auth extends Component {\n  private formRef: React.RefObject<HTMLFormElement>;\n\n  constructor(params) {\n    super(params);\n    this.formRef = React.createRef();\n  }\n\n  resetForm() {\n    this.formRef.current?.reset();\n  }\n\n  render() {\n    return (\n      <div className=\"auth\">\n        <form ref={this.formRef} className=\"auth__form\">\n          <input type=\"email\" placeholder=\"login\" />\n          <input type=\"password\" placeholder=\"password\" />\n        </form>\n        <div className=\"auth__footer\">\n          <Button onClick={() => this.resetForm()} thema=\"danger\">Clear</Button>\n          <Button onClick={() => {}}>Login</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Auth;","import React, { Component } from 'react'\nimport Auth from '../auth/Auth';\nimport './modal.scss';\n\ninterface ModalProps {\n  handlerClose: () => void;\n  open: boolean;\n}\n\nexport default class Modal extends Component<ModalProps> {\n  render() {\n    return (\n      <div className={`modal ${this.props.open ? 'show' : 'hidden'}`} onClick={this.props.handlerClose}>\n        <div className=\"modal__inner\" onClick={((e) => e.stopPropagation())}>\n          <div className=\"modal__close\" onClick={this.props.handlerClose}>\n            <span></span>\n            <span></span>\n          </div>\n          <div className=\"modal__header\">\n            Login\n          </div>\n          <div className=\"modal__body\">\n            <Auth />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../header/Header\";\n\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport \"./styles.scss\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport { getRoutes } from \"../../routes\";\nimport Modal from \"../modal/Modal\";\nimport { setOpenModel } from \"../../store/actions/modal\";\n\ninterface AppProps {\n  sidebar: boolean;\n  modalOpen: boolean;\n}\n\nclass App extends Component<AppProps> {\n  render() {\n    const routes = getRoutes();\n\n    return (\n      <>\n        <Router>\n          <Header />\n          <Sidebar open={this.props.sidebar} />\n          <Modal open={this.props.modalOpen} handlerClose={() => setOpenModel(false)} />\n          <main className=\"container\">\n            {routes}\n          </main>\n        </Router>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  sidebar: state.header.sidebar,\n  modalOpen: state.modal.open,\n});\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CategoryPage from \"./pages/CategoryPage\";\nimport HardwordsPage from \"./pages/HardwordsPage\";\nimport MainPage from \"./pages/MainPage\";\nimport StatisticPage from \"./pages/StatisticPage\";\n\nexport const getRoutes = () => {\n  return (<Switch>\n    <Route path=\"/home\" exact>\n      <MainPage />\n    </Route>\n    <Route path=\"/statistic\" exact>\n      <StatisticPage />\n    </Route>\n    <Route path=\"/hardwords\" exact>\n      <HardwordsPage />\n    </Route>\n    <Route\n      path=\"/categories/:category\"\n      render={({ match }) => <CategoryPage match={match} />}\n    />\n    <Redirect to=\"/home\" />\n  </Switch>)\n};\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}