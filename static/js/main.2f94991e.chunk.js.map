{"version":3,"sources":["types/header.ts","components/switch-box/SwitchBox.tsx","components/button/Button.tsx","utils/getSrc.ts","hooks/useTypedSelector.ts","store/actions/header.ts","types/modal.ts","store/actions/modal.ts","types/words.ts","store/reducers/headerReducer.ts","data/cards.ts","store/reducers/wordsReducer.ts","types/play.ts","store/reducers/playReducer.ts","types/statistic.ts","store/reducers/statisticReducer.ts","store/reducers/modalReducer.ts","store/reducers/index.ts","store/index.ts","store/actions/words.ts","store/actions/statistic.ts","store/actions/play.ts","store/actions/index.ts","hooks/useActions.ts","components/header/Header.tsx","components/card/Card.tsx","components/menu-items/menu-item/MenuItem.tsx","components/menu-items/MenuItems.tsx","components/sidebar/Sidebar.tsx","components/checks-bar/ChecksBar.tsx","components/words-list/word-item/WordItem.tsx","components/words-list/WordsList.tsx","pages/CategoryPage.tsx","pages/HardwordsPage.tsx","pages/MainPage.tsx","components/statistic-table/th/Th.tsx","components/statistic-table/td/Td.tsx","components/statistic-table/tr/Tr.tsx","components/statistic-table/StatisticTable.tsx","pages/StatisticPage.tsx","components/auth/Auth.tsx","components/modal/Modal.tsx","components/app/index.ts","components/app/App.tsx","routes.js","index.tsx"],"names":["HeaderActionTypes","SwitchBox","checked","changeHandler","className","type","onChange","Button","onClick","children","disabled","thema","defaultFolder","getSrcAudio","audio","online","getSrcImageWord","image","getSrcImageIcon","useTypedSelector","useSelector","ModalActionTypes","toggleSidebar","dispatch","TOGGLE_SIDEBAR","setSidebar","value","SET_SIDEBAR","WordsActionTypes","toggleModal","TOGGLE_MODAL","setOpenModel","SET_OPEN_MODAL","initialState","sidebar","cards","categories","id","name","words","word","translation","audioSrc","PlayActionTypes","StatisticActionTypes","playMode","start","errors","checks","data","open","rootReducer","combineReducers","header","state","action","GET_WORDS","wordsCategory","payload","CLEAR_WORDS_CATEGORY","undefined","play","TOGGLE_PLAY_MODE","PLAY_GAME","RANDOM_WORD","activeWord","randomWord","PLAY_SOUND","CHECK_WORD","checkWord","filter","END_GAME","endGame","RESUME_GAME","statistic","FETCH_STATISTIC","FILTER_STATISTIC","fieldFilter","field","ascFilter","asc","modal","store","createStore","applyMiddleware","thunk","getWords","indexCategory","findIndex","category","find","index","getWord","categoryName","wordName","clearWords","addStatisticLS","toString","stringState","localStorage","getItem","JSON","stringify","correct","incorrect","trained","setItem","parseState","parse","resetStatistic","clear","fetchStatistic","getHardWords","getState","sort","a","b","wordState","percentage","slice","map","wordsState","wordStatisticLS","wordStatistic","parseWord","flat","filterStatistic","togglePlayMode","resumeGame","Math","floor","random","length","playSound","Audio","src","addEventListener","actions","HeaderActionCreators","ModalActionCreators","PlayActionCreators","StatisticActionCreator","WordsActionCreator","useActions","useDispatch","bindActionCreators","ActionCreators","Header","alt","to","Card","MenuItem","title","href","card","MenuItems","visibleCard","Sidebar","e","stopPropagation","ChecksBar","check","WordItem","useState","flipped","setFlipped","playing","setPlaying","setDisabled","useEffect","cardHandler","playAudio","onMouseLeave","aria-disabled","WordsList","CategoryPage","timeout","match","redirect","setRedirect","changeWords","useCallback","params","clearTimeout","setTimeout","HardwordsPage","hardwords","setHardwords","MainPage","Th","Td","Tr","dataFields","StatisticTable","loadStatistic","stateWord","key","StatisticPage","Auth","formRef","useRef","ref","placeholder","current","reset","resetForm","Modal","handlerClose","App","routes","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f94991e.chunk.js","sourcesContent":["export interface HeaderState {\n  sidebar: boolean;\n}\n\nexport enum HeaderActionTypes {\n  TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR',\n  SET_SIDEBAR = 'SET_SIDEBAR'\n}\n\ninterface ToggleSidebarAction {\n  type: HeaderActionTypes.TOGGLE_SIDEBAR;\n}\n\ninterface SetSidebarAction {\n  type: HeaderActionTypes.SET_SIDEBAR;\n  value: boolean;\n}\n\n\nexport type HeaderAction = ToggleSidebarAction | SetSidebarAction;","import React, { ChangeEventHandler } from 'react'\n\nimport './switch-box.scss';\n\ninterface SwithBoxProps {\n  checked?: boolean;\n  changeHandler: ChangeEventHandler\n}\n\nconst SwitchBox = ({ checked, changeHandler }: SwithBoxProps) => {\n  return (\n    <>\n      <label className=\"switch\" >\n        <input type=\"checkbox\" checked={checked} onChange={changeHandler}/>\n        <span className=\"slider round\">{checked ? <span>Train</span> : <span>Play</span>}</span>\n      </label>\n    </>\n  )\n}\n\nexport default SwitchBox;\n","import React, { MouseEventHandler } from \"react\";\n\nimport './button.scss';\n\ninterface ButtonProps {\n  className?: string;\n  thema?: \"primary\" | \"sidebar\" | \"round\" | \"danger\";\n  onClick?: MouseEventHandler;\n  children?: any;\n  disabled?: boolean;\n}\n\nconst Button = ({ onClick, children, disabled, thema, className }: ButtonProps) => {\n  return (\n    <button\n      onClick={onClick}\n      className={`btn btn--${\n        thema ? thema : \"primary\"\n      } ${className || ''}`}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Button;","const defaultFolder = '/assets';\n\nexport const getSrcAudio = (audio: string, online: boolean = false): string => {\n  if(online) return `https://wooordhunt.ru/data/sound/sow/uk/${audio}`;\n  return `${defaultFolder}/audio/${audio}`;\n}\n\nexport const getSrcImageWord = (image: string): string => {\n  return `${defaultFolder}/img/words/${image}`;\n}\n\nexport const getSrcImage = (image: string): string => {\n  return `${defaultFolder}/img/${image}`;\n}\n\nexport const getSrcImageIcon = (image: string): string => {\n  return `${defaultFolder}/img/icons/${image}`;\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../store/reducers\";\n\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import { Dispatch } from \"react\";\nimport { HeaderAction, HeaderActionTypes } from \"../../types/header\";\n\nexport const toggleSidebar = () => {\n  return (dispatch: Dispatch<HeaderAction>) => {\n    dispatch({ type: HeaderActionTypes.TOGGLE_SIDEBAR })\n  }\n}\n\nexport const setSidebar = (value: boolean) => {\n  return (dispatch: Dispatch<HeaderAction>) => { \n    dispatch({ type: HeaderActionTypes.SET_SIDEBAR, value: value })\n  }\n}","export interface ModalState {\n  open: boolean;\n}\n\nexport enum ModalActionTypes {\n  TOGGLE_MODAL = 'TOGGLE_MODAL',\n  SET_OPEN_MODAL= 'SET_OPEN_MODAL'\n}\n\ninterface ToggleModalAction {\n  type: ModalActionTypes.TOGGLE_MODAL;\n}\n\ninterface SetOpenModalAction {\n  type: ModalActionTypes.SET_OPEN_MODAL;\n  value: boolean;\n}\n\n\nexport type ModalAction = ToggleModalAction | SetOpenModalAction;","import { Dispatch } from \"react\";\nimport { ModalAction, ModalActionTypes } from \"../../types/modal\";\n\nexport const toggleModal = () => {\n  return (dispatch: Dispatch<ModalAction>) => {\n    dispatch({ type: ModalActionTypes.TOGGLE_MODAL })\n  }\n}\n\nexport const setOpenModel = (value: boolean) => {\n  return (dispatch: Dispatch<ModalAction>) => {\n    dispatch({ type: ModalActionTypes.SET_OPEN_MODAL, value: value })\n  }\n}","import CategoryModel from \"../models/category\";\nimport WordModel from \"../models/word\";\n\nexport interface WordsState {\n  categories: CategoryModel[];\n  words: WordModel[][];\n  wordsCategory?: WordModel[]\n}\n\nexport enum WordsActionTypes {\n  GET_WORDS = \"GET_WORDS\",\n  CLEAR_WORDS_CATEGORY = \"CLEAR_WORDS_CATEGORY\"\n}\n\ninterface GetWordsAction {\n  type: WordsActionTypes.GET_WORDS;\n  payload: WordModel[];\n}\n\ninterface ClearWordsAction {\n  type: WordsActionTypes.CLEAR_WORDS_CATEGORY;\n}\n\nexport type WordsAction = GetWordsAction | ClearWordsAction;","import { HeaderAction, HeaderActionTypes, HeaderState } from \"../../types/header\"\n\nconst initialState: HeaderState = {\n  sidebar: false\n}\n\nexport const headerReducer = (state = initialState, action: HeaderAction): HeaderState => {\n  switch(action.type) {\n    case HeaderActionTypes.TOGGLE_SIDEBAR:\n      return { sidebar: !state.sidebar }\n    case HeaderActionTypes.SET_SIDEBAR:\n      return { sidebar: action.value }\n    default:\n      return state\n  }\n}","import { WordsState } from \"../types/words\";\n\nconst cards: WordsState = {\n  categories: [\n    {\n      id: \"action-set-a\",\n      name: \"Action (set A)\",\n      image: \"dance.jpg\",\n    },\n    {\n      id: \"action-set-b\",\n      name: \"Action (set B)\",\n      image: \"swim.jpg\",\n    },\n    {\n      id: \"animal-set-a\",\n      name: \"Animal (set A)\",\n      image: \"rabbit.jpg\",\n    },\n    {\n      id: \"animal-set-b\",\n      name: \"Animal (set B)\",\n      image: \"mouse.jpg\",\n    },\n    {\n      id: \"clothes\",\n      name: \"Clothes\",\n      image: \"blouse.jpg\",\n    },\n    {\n      id: \"emotions\",\n      name: \"Emotions\",\n      image: \"happy.jpg\",\n    },\n    {\n      id: \"fruits\",\n      name: \"Fruits\",\n      image: \"pineapple.jpg\",\n    },\n    {\n      id: \"vegetables\",\n      name: \"Vegetables\",\n      image: \"tomato.jpg\",\n    },\n  ],\n  words: [\n    [\n      {\n        id: 1,\n        word: \"cry\",\n        translation: \"плакать\",\n        image: \"cry.jpg\",\n        audioSrc: \"cry.mp3\",\n      },\n      {\n        id: 2,\n        word: \"dance\",\n        translation: \"танцевать\",\n        image: \"dance.jpg\",\n        audioSrc: \"dance.mp3\",\n      },\n      {\n        id: 3,\n        word: \"dive\",\n        translation: \"нырять\",\n        image: \"dive.jpg\",\n        audioSrc: \"dive.mp3\",\n      },\n      {\n        id: 4,\n        word: \"draw\",\n        translation: \"рисовать\",\n        image: \"draw.jpg\",\n        audioSrc: \"draw.mp3\",\n      },\n      {\n        id: 5,\n        word: \"fish\",\n        translation: \"ловить рыбу\",\n        image: \"fish.jpg\",\n        audioSrc: \"fish.mp3\",\n      },\n      {\n        id: 6,\n        word: \"fly\",\n        translation: \"летать\",\n        image: \"fly.jpg\",\n        audioSrc: \"fly.mp3\",\n      },\n      {\n        id: 7,\n        word: \"hug\",\n        translation: \"обнимать\",\n        image: \"hug.jpg\",\n        audioSrc: \"hug.mp3\",\n      },\n      {\n        id: 8,\n        word: \"jump\",\n        translation: \"прыгать\",\n        image: \"jump.jpg\",\n        audioSrc: \"jump.mp3\",\n      },\n    ],\n    [\n      {\n        id: 9,\n        word: \"open\",\n        translation: \"открывать\",\n        image: \"open.jpg\",\n        audioSrc: \"open.mp3\",\n      },\n      {\n        id: 10,\n        word: \"play\",\n        translation: \"играть\",\n        image: \"play.jpg\",\n        audioSrc: \"play.mp3\",\n      },\n      {\n        id: 11,\n        word: \"point\",\n        translation: \"указывать\",\n        image: \"point.jpg\",\n        audioSrc: \"point.mp3\",\n      },\n      {\n        id: 12,\n        word: \"ride\",\n        translation: \"ездить\",\n        image: \"ride.jpg\",\n        audioSrc: \"ride.mp3\",\n      },\n      {\n        id: 13,\n        word: \"run\",\n        translation: \"бегать\",\n        image: \"run.jpg\",\n        audioSrc: \"run.mp3\",\n      },\n      {\n        id: 14,\n        word: \"sing\",\n        translation: \"петь\",\n        image: \"sing.jpg\",\n        audioSrc: \"sing.mp3\",\n      },\n      {\n        id: 15,\n        word: \"skip\",\n        translation: \"пропускать, прыгать\",\n        image: \"skip.jpg\",\n        audioSrc: \"skip.mp3\",\n      },\n      {\n        id: 16,\n        word: \"swim\",\n        translation: \"плавать\",\n        image: \"swim.jpg\",\n        audioSrc: \"swim.mp3\",\n      },\n    ],\n    [\n      {\n        id: 17,\n        word: \"cat\",\n        translation: \"кот\",\n        image: \"cat.jpg\",\n        audioSrc: \"cat.mp3\",\n      },\n      {\n        id: 18,\n        word: \"chick\",\n        translation: \"цыплёнок\",\n        image: \"chick.jpg\",\n        audioSrc: \"chick.mp3\",\n      },\n      {\n        id: 19,\n        word: \"chicken\",\n        translation: \"курица\",\n        image: \"chicken.jpg\",\n        audioSrc: \"chicken.mp3\",\n      },\n      {\n        id: 20,\n        word: \"dog\",\n        translation: \"собака\",\n        image: \"dog.jpg\",\n        audioSrc: \"dog.mp3\",\n      },\n      {\n        id: 21,\n        word: \"horse\",\n        translation: \"лошадь\",\n        image: \"horse.jpg\",\n        audioSrc: \"horse.mp3\",\n      },\n      {\n        id: 22,\n        word: \"pig\",\n        translation: \"свинья\",\n        image: \"pig.jpg\",\n        audioSrc: \"pig.mp3\",\n      },\n      {\n        id: 23,\n        word: \"rabbit\",\n        translation: \"кролик\",\n        image: \"rabbit.jpg\",\n        audioSrc: \"rabbit.mp3\",\n      },\n      {\n        id: 24,\n        word: \"sheep\",\n        translation: \"овца\",\n        image: \"sheep.jpg\",\n        audioSrc: \"sheep.mp3\",\n      },\n    ],\n    [\n      {\n        id: 25,\n        word: \"bird\",\n        translation: \"птица\",\n        image: \"bird.jpg\",\n        audioSrc: \"bird.mp3\",\n      },\n      {\n        id: 26,\n        word: \"fish\",\n        translation: \"рыба\",\n        image: \"fish1.jpg\",\n        audioSrc: \"fish.mp3\",\n      },\n      {\n        id: 27,\n        word: \"frog\",\n        translation: \"жаба\",\n        image: \"frog.jpg\",\n        audioSrc: \"frog.mp3\",\n      },\n      {\n        id: 28,\n        word: \"giraffe\",\n        translation: \"жирафа\",\n        image: \"giraffe.jpg\",\n        audioSrc: \"giraffe.mp3\",\n      },\n      {\n        id: 29,\n        word: \"lion\",\n        translation: \"лев\",\n        image: \"lion.jpg\",\n        audioSrc: \"lion.mp3\",\n      },\n      {\n        id: 30,\n        word: \"mouse\",\n        translation: \"мышь\",\n        image: \"mouse.jpg\",\n        audioSrc: \"mouse.mp3\",\n      },\n      {\n        id: 31,\n        word: \"turtle\",\n        translation: \"черепаха\",\n        image: \"turtle.jpg\",\n        audioSrc: \"turtle.mp3\",\n      },\n      {\n        id: 32,\n        word: \"dolphin\",\n        translation: \"дельфин\",\n        image: \"dolphin.jpg\",\n        audioSrc: \"dolphin.mp3\",\n      },\n    ],\n    [\n      {\n        id: 33,\n        word: \"skirt\",\n        translation: \"юбка\",\n        image: \"skirt.jpg\",\n        audioSrc: \"skirt.mp3\",\n      },\n      {\n        id: 34,\n        word: \"pants\",\n        translation: \"брюки\",\n        image: \"pants.jpg\",\n        audioSrc: \"pants.mp3\",\n      },\n      {\n        id: 35,\n        word: \"blouse\",\n        translation: \"блузка\",\n        image: \"blouse.jpg\",\n        audioSrc: \"blouse.mp3\",\n      },\n      {\n        id: 36,\n        word: \"dress\",\n        translation: \"платье\",\n        image: \"dress.jpg\",\n        audioSrc: \"dress.mp3\",\n      },\n      {\n        id: 37,\n        word: \"boot\",\n        translation: \"ботинок\",\n        image: \"boot.jpg\",\n        audioSrc: \"boot.mp3\",\n      },\n      {\n        id: 38,\n        word: \"shirt\",\n        translation: \"рубашка\",\n        image: \"shirt.jpg\",\n        audioSrc: \"shirt.mp3\",\n      },\n      {\n        id: 39,\n        word: \"coat\",\n        translation: \"пальто\",\n        image: \"coat.jpg\",\n        audioSrc: \"coat.mp3\",\n      },\n      {\n        id: 40,\n        word: \"shoe\",\n        translation: \"туфли\",\n        image: \"shoe.jpg\",\n        audioSrc: \"shoe.mp3\",\n      },\n    ],\n    [\n      {\n        id: 41,\n        word: \"sad\",\n        translation: \"грустный\",\n        image: \"sad.jpg\",\n        audioSrc: \"sad.mp3\",\n      },\n      {\n        id: 42,\n        word: \"angry\",\n        translation: \"сердитый\",\n        image: \"angry.jpg\",\n        audioSrc: \"angry.mp3\",\n      },\n      {\n        id: 43,\n        word: \"happy\",\n        translation: \"счастливый\",\n        image: \"happy.jpg\",\n        audioSrc: \"happy.mp3\",\n      },\n      {\n        id: 44,\n        word: \"tired\",\n        translation: \"уставший\",\n        image: \"tired.jpg\",\n        audioSrc: \"tired.mp3\",\n      },\n      {\n        id: 45,\n        word: \"surprised\",\n        translation: \"удивлённый\",\n        image: \"surprised.jpg\",\n        audioSrc: \"surprised.mp3\",\n      },\n      {\n        id: 46,\n        word: \"scared\",\n        translation: \"испуганный\",\n        image: \"scared.jpg\",\n        audioSrc: \"scared.mp3\",\n      },\n      {\n        id: 47,\n        word: \"smile\",\n        translation: \"улыбка\",\n        image: \"smile.jpg\",\n        audioSrc: \"smile.mp3\",\n      },\n      {\n        id: 48,\n        word: \"laugh\",\n        translation: \"смех\",\n        image: \"laugh.jpg\",\n        audioSrc: \"laugh.mp3\",\n      },\n    ],\n    [\n      {\n        id: 49,\n        word: \"pineapple\",\n        translation: \"ананас\",\n        image: \"pineapple.jpg\",\n        audioSrc: \"pineapple.mp3\",\n      },\n      {\n        id: 50,\n        word: \"orange\",\n        translation: \"апельсин\",\n        image: \"orange.jpg\",\n        audioSrc: \"orange.mp3\",\n      },\n      {\n        id: 51,\n        word: \"apple\",\n        translation: \"яблоко\",\n        image: \"apple.jpg\",\n        audioSrc: \"apple.mp3\",\n      },\n      {\n        id: 52,\n        word: \"banana\",\n        translation: \"банан\",\n        image: \"banana.jpg\",\n        audioSrc: \"banana.mp3\",\n      },\n      {\n        id: 53,\n        word: \"kiwi\",\n        translation: \"киви\",\n        image: \"kiwi.jpg\",\n        audioSrc: \"kiwi.mp3\",\n      },\n      {\n        id: 54,\n        word: \"grapes\",\n        translation: \"виноград\",\n        image: \"grapes.jpg\",\n        audioSrc: \"grapes.mp3\",\n      },\n      {\n        id: 55,\n        word: \"coconut\",\n        translation: \"кокос\",\n        image: \"coconut.jpg\",\n        audioSrc: \"coconut.mp3\",\n      },\n      {\n        id: 56,\n        word: \"pear\",\n        translation: \"груша\",\n        image: \"pear.jpg\",\n        audioSrc: \"pear.mp3\",\n      },\n    ],\n    [\n      {\n        id: 57,\n        word: \"potato\",\n        translation: \"картофель\",\n        image: \"potato.jpg\",\n        audioSrc: \"potato.mp3\",\n      },\n      {\n        id: 58,\n        word: \"tomato\",\n        translation: \"помидор\",\n        image: \"tomato.jpg\",\n        audioSrc: \"tomato.mp3\",\n      },\n      {\n        id: 59,\n        word: \"eggplant\",\n        translation: \"баклажан\",\n        image: \"eggplant.jpg\",\n        audioSrc: \"eggplant.mp3\",\n      },\n      {\n        id: 60,\n        word: \"corn\",\n        translation: \"кукуруза\",\n        image: \"corn.jpg\",\n        audioSrc: \"corn.mp3\",\n      },\n      {\n        id: 61,\n        word: \"carrot\",\n        translation: \"морковь\",\n        image: \"carrot.jpg\",\n        audioSrc: \"carrot.mp3\",\n      },\n      {\n        id: 62,\n        word: \"mushroom\",\n        translation: \"гриб\",\n        image: \"mushroom.jpg\",\n        audioSrc: \"mushroom.mp3\",\n      },\n      {\n        id: 63, \n        word: \"pea\",\n        translation: \"горох\",\n        image: \"pea.jpg\",\n        audioSrc: \"pea.mp3\",\n      },\n      {\n        id: 64,\n        word: \"onion\",\n        translation: \"лук\",\n        image: \"onion.jpg\",\n        audioSrc: \"onion.mp3\",\n      },\n    ],\n  ],\n};\n\nexport default cards;\n","import cards from \"../../data/cards\"\nimport { WordsAction, WordsActionTypes, WordsState } from \"../../types/words\"\n\nconst initialState: WordsState = cards\n\nexport const wordsReducer = (state = initialState, action: WordsAction): WordsState => {\n  switch(action.type) {\n    case WordsActionTypes.GET_WORDS:\n      return { ...state, wordsCategory: action.payload }\n    case WordsActionTypes.CLEAR_WORDS_CATEGORY:\n      return { ...state, wordsCategory: undefined }\n    default:\n      return state\n  }\n}","import WordModel from \"../models/word\";\n\nexport interface PlayState {\n  playMode: boolean;\n  start: boolean;\n  errors: number;\n  activeWord?: WordModel;\n  checks: boolean[];\n  endGame?: boolean;\n  words?: WordModel[];\n}\n\nexport enum PlayActionTypes {\n  TOGGLE_PLAY_MODE = \"TOGGLE_PLAY_MODE\",\n  PLAY_GAME = \"PLAY_GAME\",\n  RANDOM_WORD = \"RANDOM_WORD\",\n  PLAY_SOUND = \"PLAY_SOUND\",\n  CHECK_WORD = \"CHECK_WORD\",\n  END_GAME = \"END_GAME\",\n  RESUME_GAME = \"RESUME_GAME\"\n}\n\ninterface TogglePlayModeAction {\n  type: PlayActionTypes.TOGGLE_PLAY_MODE;\n}\n\ninterface PlayGameAction {\n  type: PlayActionTypes.PLAY_GAME;\n  words: WordModel[];\n}\n\ninterface RandomWordAction {\n  type: PlayActionTypes.RANDOM_WORD,\n  randomWord: WordModel;\n}\n\ninterface PlaySoundAction {\n  type: PlayActionTypes.PLAY_SOUND;\n}\n\ninterface CheckWordAction {\n  type: PlayActionTypes.CHECK_WORD;\n  checkWord: boolean;\n  word: WordModel;\n}\n\ninterface EndGameAction {\n  type: PlayActionTypes.END_GAME;\n}\n\ninterface ResumeGameAction {\n  type: PlayActionTypes.RESUME_GAME;\n}\n\nexport type PlayAction = TogglePlayModeAction | PlayGameAction | CheckWordAction | PlaySoundAction | EndGameAction | RandomWordAction | ResumeGameAction;\n","import { PlayAction, PlayActionTypes, PlayState } from \"../../types/play\"\n\nconst initialState: PlayState = {\n  playMode: false,\n  start: false,\n  words: [],\n  errors: 0,\n  checks: []\n}\n\nexport const playReducer = (state = initialState, action: PlayAction): PlayState => {\n  switch(action.type) {\n    case PlayActionTypes.TOGGLE_PLAY_MODE:\n      return { ...state, playMode: !state.playMode }\n    case PlayActionTypes.PLAY_GAME:\n      return {...state, start: true, words: action.words };\n    case PlayActionTypes.RANDOM_WORD:\n      return { ...state, activeWord: action.randomWord }\n    case PlayActionTypes.PLAY_SOUND:\n      return state\n    case PlayActionTypes.CHECK_WORD:\n      if(action.checkWord) {\n        return {\n          ...state,\n          words: state.words?.filter(word => word !== action.word),\n          checks: [...state.checks, action.checkWord]\n        }\n      }\n      return { ...state, errors: state.errors + 1, checks: [...state.checks, action.checkWord] }\n    case PlayActionTypes.END_GAME:\n      return { ...state, endGame: true }\n    case PlayActionTypes.RESUME_GAME:\n      return { ...initialState, playMode: state.playMode }\n    default:\n      return state\n  }\n}","import { WordStateModel } from \"../models/word-state\";\n\nexport interface StatisticState {\n  data: WordStateModel[];\n  fieldFilter?: string;\n  ascFilter?: boolean;\n}\n\nexport enum StatisticActionTypes {\n  FETCH_STATISTIC = \"FETCH_STATISTIC\",\n  FILTER_STATISTIC = \"FILTER_STATISTIC\"\n}\n\ninterface FetchStatisticAction {\n  type: StatisticActionTypes.FETCH_STATISTIC;\n  data: WordStateModel[];\n}\n\ninterface FilterStatisticAction {\n  type: StatisticActionTypes.FILTER_STATISTIC;\n  field?: string,\n  asc?: boolean\n}\n\n\nexport type StatisticAction = FetchStatisticAction | FilterStatisticAction;\n","import { StatisticState, StatisticAction, StatisticActionTypes } from \"../../types/statistic\"\n\nconst initialState: StatisticState = {\n  data: []\n}\n\nexport const statisticReducer = (state = initialState, action: StatisticAction): StatisticState => {\n  switch(action.type) {\n    case StatisticActionTypes.FETCH_STATISTIC:\n      return { ...state, data: action.data }\n    case StatisticActionTypes.FILTER_STATISTIC:\n      return { ...state, fieldFilter: action.field, ascFilter: action.asc }\n    default:\n      return state\n  }\n}","import { ModalAction, ModalActionTypes, ModalState } from \"../../types/modal\"\n\nconst initialState: ModalState = {\n  open: false\n}\n\nexport const modalReducer = (state = initialState, action: ModalAction): ModalState => {\n  switch(action.type) {\n    case ModalActionTypes.TOGGLE_MODAL:\n      return { open: !state.open }\n    case ModalActionTypes.SET_OPEN_MODAL:\n      return { open: action.value }\n    default:\n      return state\n  }\n}","import { combineReducers } from \"redux\";\n\nimport { headerReducer } from './headerReducer';\nimport { wordsReducer } from \"./wordsReducer\";\nimport { playReducer } from \"./playReducer\";\nimport { statisticReducer } from \"./statisticReducer\";\nimport { modalReducer } from \"./modalReducer\";\n\nexport const rootReducer = combineReducers({\n  header: headerReducer,\n  words: wordsReducer,\n  play: playReducer,\n  statistic: statisticReducer,\n  modal: modalReducer\n})\n\n\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import { Dispatch } from \"react\";\nimport cards from \"../../data/cards\";\nimport WordModel from \"../../models/word\";\nimport { WordsAction, WordsActionTypes } from \"../../types/words\";\n\nexport const getWords = (id: string) => {\n  return (dispatch: Dispatch<WordsAction>) => { \n    const indexCategory = cards.categories.findIndex((category) => category.id === id);\n    const wordsCategory = cards.words.find((wordsCategory: WordModel[], index) => index === indexCategory);\n    if(wordsCategory) return dispatch({ type: WordsActionTypes.GET_WORDS, payload: wordsCategory });\n  }\n}\n\nexport const getWord = (categoryName: string, wordName: string) => {\n  const indexCategory = cards.categories.findIndex((category) => category.name === categoryName);\n  const word = cards.words[indexCategory].find((word: WordModel) => word.word === wordName);\n  return word;\n}\n\nexport const clearWords = () => {\n  return (dispatch: Dispatch<WordsAction>) => { \n    return dispatch({ type: WordsActionTypes.CLEAR_WORDS_CATEGORY })\n  }\n}","import { Dispatch } from \"react\";\nimport { store } from \"..\";\nimport { LSStateModel } from \"../../models/ls-state\";\nimport WordModel from \"../../models/word\";\nimport { WordStateModel } from \"../../models/word-state\";\nimport { StatisticAction, StatisticActionTypes } from \"../../types/statistic\";\nimport { getWord } from \"./words\";\n\nfunction getPercentage(correct: number, incorrect: number): number {\n  return (correct * 100) / (correct + incorrect) || 0;\n}\n\nexport const addStatisticLS = (type: string, word: WordModel) => {\n  if (word) {\n    const id = word.id.toString()\n    let stringState = localStorage.getItem(id);\n    if (!stringState) {\n      stringState = JSON.stringify({\n        correct: 0,\n        incorrect: 0,\n        trained: 0,\n      });\n      localStorage.setItem(id, JSON.stringify(stringState));\n    }\n    let parseState = JSON.parse(stringState) as LSStateModel;\n    switch (type) {\n      case \"correct\":\n        parseState.correct += 1;\n        break;\n      case \"incorrect\":\n        parseState.incorrect += 1;\n        break;\n      default:\n        parseState.trained += 1;\n        break;\n    }\n    localStorage.setItem(id, JSON.stringify(parseState));\n  }\n};\n\nexport const resetStatistic = () => {\n  return (dispatch: Dispatch<StatisticAction>) => { \n    localStorage.clear();\n    dispatch({\n      type: StatisticActionTypes.FILTER_STATISTIC,\n      field: undefined,\n      asc: undefined,\n    });\n    fetchStatistic();\n  }\n};\n\nexport const getHardWords = () => {\n  let hardWords = store.getState().statistic.data\n    .sort((a: WordStateModel, b: WordStateModel) => {\n      if (a.incorrect < b.incorrect) return 1;\n      return -1;\n    })\n    .filter(\n      (wordState: WordStateModel) =>\n        wordState.percentage > 0 && wordState.percentage < 100\n    )\n    .slice(0, 8)\n    .map((wordState: WordStateModel) =>\n      getWord(wordState.category, wordState.word)\n    )\n    .filter((word: WordModel | undefined) => word !== undefined);\n  return hardWords as WordModel[];\n};\n\nexport const fetchStatistic = (fieldFilter?: string, ascFilter?: boolean) => {\n  return (dispatch: Dispatch<StatisticAction>) => { \n    const wordsState = store.getState().words;\n    const categories = wordsState.categories;\n    const words = wordsState.words;\n    let statistic = words\n      .map((wordsCategory: WordModel[], index: number) => {\n        return wordsCategory.map((word: WordModel) => {\n          const id = word.id.toString()\n          let wordStatisticLS = localStorage.getItem(id);\n          if (!wordStatisticLS) {\n            const wordStatistic = JSON.stringify({\n              trained: 0,\n              correct: 0,\n              incorrect: 0,\n            });\n            localStorage.setItem(id, wordStatistic);\n            wordStatisticLS = wordStatistic;\n          }\n          const parseWord = JSON.parse(wordStatisticLS) as LSStateModel;\n          return {\n            category: categories[index].name,\n            word: word.word,\n            translation: word.translation,\n            trained: parseWord.trained,\n            correct: parseWord.correct,\n            incorrect: parseWord.incorrect,\n            percentage: getPercentage(parseWord.correct, parseWord.incorrect),\n          };\n        });\n      })\n      .flat();\n    if (fieldFilter) {\n      statistic = statistic.sort(\n        (a: WordStateModel, b: WordStateModel) =>\n          (a[fieldFilter] > b[fieldFilter] && (ascFilter ? 1 : -1)) ||\n          (ascFilter ? -1 : 1)\n      );\n    }\n    dispatch({\n      type: StatisticActionTypes.FETCH_STATISTIC,\n      data: statistic,\n    });\n    return statistic;\n  }\n};\n\nexport const filterStatistic = (field, asc = true) => {\n  return (dispatch: Dispatch<StatisticAction>) => { \n    return dispatch({\n      type: StatisticActionTypes.FILTER_STATISTIC,\n      field: field,\n      asc: asc,\n    });\n  }\n};\n","import { Dispatch } from \"react\";\nimport { store } from \"..\";\nimport WordModel from \"../../models/word\";\nimport { PlayAction, PlayActionTypes } from \"../../types/play\";\nimport { addStatisticLS } from \"./statistic\";\n\nexport const togglePlayMode = () => {\n  return (dispatch: Dispatch<PlayAction>) => { \n    dispatch({ type: PlayActionTypes.TOGGLE_PLAY_MODE });\n    resumeGame();\n  }\n}\n\nexport const play = () => {\n  return (dispatch: Dispatch<PlayAction>) => { \n    let words = store.getState().words.wordsCategory;\n    if(words) {\n      dispatch({ type: PlayActionTypes.PLAY_GAME, words: words })\n      randomWord();\n    }\n  }\n}\n\nexport const randomWord = () => {\n  const words = store.getState().play.words;\n  if(words) {\n    const randomWord = words[Math.floor(Math.random() * words.length)];\n    if(randomWord) {\n      store.dispatch({ type: PlayActionTypes.RANDOM_WORD, randomWord: randomWord });\n      playSound();\n    }\n  }\n}\n\nexport const playSound = () => { \n  const activeWord = store.getState().play.activeWord;\n  if(activeWord) {\n    const audio = new Audio(`/assets/${activeWord?.audioSrc}`);\n    audio.src = `https://wooordhunt.ru/data/sound/sow/uk/${activeWord?.word}.mp3`;\n    audio.play();\n  }\n}\n\nexport const checkWord = (word: WordModel) => {\n  return (dispatch: Dispatch<PlayAction>) => { \n    const activeWord = store.getState().play.activeWord;\n    dispatch({ type: PlayActionTypes.CHECK_WORD, checkWord: activeWord === word, word: word })\n    \n    const words = store.getState().play.words;\n    if(words && words.length > 0) {\n      if(activeWord === word) {\n        const audio = new Audio(`/assets/audio/success.wav`);\n        audio.addEventListener('ended', () => randomWord());\n        audio.play();\n      }\n    } else {\n      dispatch({ type: PlayActionTypes.END_GAME })\n    }\n\n    if(activeWord) addStatisticLS(activeWord === word ? 'correct' : 'incorrect', activeWord);\n\n    return activeWord === word;\n  }\n}\n\nexport const resumeGame = () => {\n  return (dispatch: Dispatch<PlayAction>) => { \n    return dispatch({ type: PlayActionTypes.RESUME_GAME })\n  }\n}","import * as HeaderActionCreators from './header';\nimport * as ModalActionCreators from './modal';\nimport * as PlayActionCreators from './play';\nimport * as StatisticActionCreator from './statistic';\nimport * as WordsActionCreator from './words';\n\nconst actions = {\n  ...HeaderActionCreators,\n  ...ModalActionCreators,\n  ...PlayActionCreators,\n  ...StatisticActionCreator,\n  ...WordsActionCreator\n}\n\nexport default actions;","import { useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\n\nimport ActionCreators from '../store/actions';\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n  return bindActionCreators(ActionCreators, dispatch)\n}","import React from \"react\";\nimport SwitchBox from \"../switch-box/SwitchBox\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../button/Button\";\nimport { getSrcImageIcon } from \"../../utils/getSrc\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { useActions } from \"../../hooks/useActions\";\n\nimport \"./header.scss\";\nimport { playSound } from \"../../store/actions/play\";\n\nconst Header = () => {\n  const { playMode, start } = useTypedSelector((state) => state.play);\n  const { wordsCategory } = useTypedSelector((state) => state.words);\n  const { sidebar } = useTypedSelector((state) => state.header);\n  const { play, toggleSidebar, togglePlayMode } = useActions()\n\n  return (\n    <>\n      <header className=\"header\" id=\"header\">\n        <nav className=\"nav container\">\n          <div onClick={() => toggleSidebar()} className={`nav__toggle ${sidebar ? 'close' : ''}`}>\n            <span className=\"nav__toggle-item\"></span>\n            <span className=\"nav__toggle-item\"></span>\n            <span className=\"nav__toggle-item\"></span>\n          </div>\n          <div className=\"nav__btns\">\n            <SwitchBox checked={!playMode} changeHandler={() => togglePlayMode()} />\n            {playMode ? (\n              <Button\n                className=\"nav__btns-start\"\n                onClick={() => start ? playSound() : play()}\n                disabled={!wordsCategory || wordsCategory?.length === 0 ? true : false}\n                thema=\"round\"\n              >\n                {start ? (\n                  <img src={getSrcImageIcon(\"repeat.svg\")} alt=\"Audio\" />\n                ) : (\n                  \"Start\"\n                )}\n              </Button>\n            ) : null}\n            <Link to=\"/statistic\" className=\"btn btn--primary nav__btn\">\n              State\n            </Link>\n          </div>\n        </nav>\n      </header>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport './card.scss';\n\ninterface CardInterface {\n  className: string;\n  children: any;\n}\n\nconst Card = ({ className, children }: CardInterface) => {\n  return (\n    <div className={className ? `card ${className}`: `card`}>\n      {children}\n    </div>\n  )\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"../../card/Card\";\nimport { NavLink} from 'react-router-dom';\nimport { useActions } from \"../../../hooks/useActions\";\n\nimport \"./menu-item.scss\";\n\ninterface MenuItemProps {\n  title: string;\n  href: string;\n  card?: boolean;\n  image?: string;\n}\n\nconst MenuItem = ({ title, href, card, image }: MenuItemProps) => {\n  const { setSidebar } = useActions()\n  return (\n    <li className=\"menu__item\">\n      <NavLink to={href} className='menu__item-link' onClick={() => setSidebar(false)}>\n        {card ? <Card className=\"menu__item-card\">\n          <img src={image} alt={title} />\n          {title}\n        </Card> : title}\n      </NavLink>\n    </li>\n  )\n}\n\nexport default MenuItem;","import React from 'react';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport CategoryModel from '../../models/category';\nimport { getSrcImageWord } from '../../utils/getSrc';\nimport MenuItem from './menu-item/MenuItem';\n\nimport './menu-items.scss';\n\ninterface MenuItemsProps {\n  visibleCard?: boolean,\n  className?: string,\n  children?: any\n}\n\nconst MenuItems = ({ className, children, visibleCard }: MenuItemsProps) => {\n  const { categories } = useTypedSelector((state) => state.words);\n  return (\n    <ul className={className ? `menu__list ${className}` : `menu__list`}>\n      {children}\n      { categories.map(\n          (category: CategoryModel, index) => (\n            <MenuItem key={index} title={category.name} image={getSrcImageWord(category.image)} href={`/categories/${category.id}`} card={visibleCard} />\n          )\n        )\n      }\n    </ul>\n  );\n}\n\nexport default MenuItems;","import React from \"react\";\nimport { useActions } from \"../../hooks/useActions\";\nimport Button from \"../button/Button\";\nimport MenuItem from \"../menu-items/menu-item/MenuItem\";\nimport MenuItems from \"../menu-items/MenuItems\";\n\nimport './sidebar.scss';\n\ntype SidebarProps = {\n  open: boolean;\n};\n\nconst Sidebar = ({ open }: SidebarProps) => {\n  const { toggleSidebar, setSidebar, setOpenModel } = useActions();\n\n  return (\n    <aside className={`sidebar ${ open ? 'show' : 'hidden'}`} onClick={ () => toggleSidebar() }>\n      <div className=\"sidebar__inner\" onClick={((e) => e.stopPropagation())}>\n        <MenuItems>\n          <MenuItem title=\"Main page\" href=\"/home\" />\n        </MenuItems>\n\n        <div className=\"sidebar__btns\">\n          <Button thema='sidebar' onClick={() => {\n            setSidebar(false);\n            setOpenModel(true)\n          }} className=\"sidebar__btn\">Login</Button>\n        </div>\n      </div>\n    </aside>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\n\nimport \"./checks-bar.scss\";\n\nconst ChecksBar = () => {\n  const { checks } = useTypedSelector((state) => state.play);\n\n  return (\n    <div className=\"checks-bar\">\n      {checks.map((check, index) => (\n        <div className=\"checks-bar__item\" key={index}>\n          {check ? <span>&#9733;</span> : <span>&#9734;</span>}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChecksBar;\n","import React, { useEffect, useState } from \"react\";\nimport WordModel from \"../../../models/word\";\nimport Card from \"../../card/Card\";\nimport { getSrcAudio, getSrcImageIcon, getSrcImageWord } from \"../../../utils/getSrc\";\nimport Button from \"../../button/Button\";\n\nimport \"./word-item.scss\";\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\nimport { useActions } from \"../../../hooks/useActions\";\nimport { addStatisticLS } from \"../../../store/actions/statistic\";\n\ninterface WordProps {\n  word: WordModel;\n}\n\nconst WordItem = ({ word }: WordProps) => {\n  const [flipped, setFlipped] = useState(false);\n  const [playing, setPlaying] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const { playMode, start } = useTypedSelector((state) => state.play)\n\n  const { checkWord } = useActions();\n\n  useEffect(() => {\n    setDisabled(false);\n  }, [start])\n\n  const playAudio = () => {\n    if (!playing) {\n      let audio = new Audio();\n      audio.src = `https://wooordhunt.ru/data/sound/sow/uk/${word.word}.mp3`\n      setPlaying(true);\n      audio.addEventListener(\"ended\", () => setPlaying(false));\n      audio.play();\n    }\n  }\n\n  const checkCard = () => {\n    if (checkWord(word)) {\n      setDisabled(true);\n    } else {\n      new Audio(getSrcAudio('error.wav')).play();\n    }\n  }\n\n  const cardHandler = () => {\n    if (!playMode) {\n      playAudio();\n      if(word) addStatisticLS(\"trained\", word);\n    } else if (start) {\n      checkCard();\n    }\n  }\n\n  return (\n    <div\n      className={flipped ? `word flipped` : `word`}\n      onMouseLeave={() => setFlipped(false)}\n      aria-disabled={disabled}\n    >\n      <Card className=\"word__card\">\n        <div className=\"word__front\" onClick={() => cardHandler()}>\n          <div className=\"word__front-header\">\n            <img src={getSrcImageWord(word.image)} alt={word.image} />\n          </div>\n          {!playMode && (\n            <div className=\"word__front-footer\">\n              <span className=\"word__name\">{word.word}</span>\n              <Button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setFlipped(true);\n                }}\n              >\n                <img src={getSrcImageIcon(\"rotate.svg\")} alt=\"Rotate\" />\n              </Button>\n            </div>\n          )}\n        </div>\n        <div className=\"word__back\">{word.translation}</div>\n      </Card>\n    </div>\n  );\n}\n\nexport default WordItem;\n","import React from 'react';\nimport WordModel from '../../models/word';\nimport WordItem from './word-item/WordItem';\n\ninterface WordsListParams {\n  words: WordModel[]\n}\n\nconst WordsList = ({ words }: WordsListParams) => {\n  return (\n    <div className=\"words__list grid\">\n      { words.map((word: WordModel, index) => <WordItem key={index} word={word} />)}\n    </div>\n  );\n}\n\nexport default WordsList;","import React, { useCallback, useEffect, useState } from 'react';\nimport ChecksBar from '../components/checks-bar/ChecksBar';\nimport WordsList from '../components/words-list/WordsList';\nimport { Redirect } from 'react-router-dom';\nimport { getSrcAudio, getSrcImage } from '../utils/getSrc';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst CategoryPage = ({ match }) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  const [redirect, setRedirect] = useState(false);\n\n  const { endGame, errors } = useTypedSelector((state) => state.play);\n  const { wordsCategory } = useTypedSelector((state) => state.words);\n\n  const { resumeGame, getWords, clearWords } = useActions();\n\n  const changeWords = useCallback(() => {\n    getWords(match.params.category)\n  }, [match.params.category])\n\n  useEffect(() => {\n    changeWords();\n  }, [changeWords])\n\n  useEffect(() => {\n    changeWords();\n  }, [changeWords, match.params.category, endGame])\n\n  useEffect(() => {\n    return () => {\n      if (timeout) clearTimeout(timeout);\n      resumeGame();\n      clearWords();\n    }\n  }, [])\n\n  if(redirect) {\n    return <Redirect to='/home' />\n  }\n\n  if (endGame) {\n    timeout = setTimeout(() => {\n      setRedirect(true);\n    }, 3000);\n\n    new Audio(getSrcAudio(errors > 0 ? 'error.mp3' : 'success.mp3')).play();\n\n    return (\n      <>\n        <div className=\"result\">\n          <img\n            src={getSrcImage(\n              errors > 0 ? \"sad.svg\" : \"happy.svg\"\n            )}\n            alt=\"Result\"\n          />\n          <span className=\"result-page__error\">\n            {errors} Errors\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ChecksBar />\n      <WordsList words={wordsCategory || []} />\n    </>\n  );\n}\n\nexport default CategoryPage;","import React, { useEffect, useState } from 'react'\nimport WordsList from '../components/words-list/WordsList'\nimport { useActions } from '../hooks/useActions'\nimport WordModel from '../models/word'\nimport { getHardWords } from '../store/actions/statistic'\n\nconst HardwordsPage = () => {\n  const [hardwords, setHardwords] = useState<WordModel[]>([]);\n  const { fetchStatistic } = useActions();\n\n  useEffect(() => {\n    fetchStatistic();\n    setHardwords(getHardWords());\n  }, [])\n\n  return (\n    <>\n      <WordsList words={hardwords} />\n    </>\n  )\n}\n\nexport default HardwordsPage;\n","import React from 'react';\nimport MenuItems from '../components/menu-items/MenuItems';\n\nconst MainPage = () => {\n  return (\n    <>\n      <MenuItems visibleCard={true} className='grid' />\n    </>\n  );\n}\n\nexport default MainPage;\n\n","import React from 'react'\nimport { useActions } from '../../../hooks/useActions';\n\nimport './th.scss';\n\ninterface ThProps {\n  field: string,\n  fieldFilter?: string;\n  ascFilter?: boolean;\n  children?: any;\n}\n\nconst Th = ({ field, fieldFilter, ascFilter, children }: ThProps) => {\n\n  const { filterStatistic } = useActions();\n\n  const filter = () => {\n    filterStatistic(field, !ascFilter);\n  }\n\n  return (\n    <th onClick={() => filter()}>\n      {children} { fieldFilter === field && (ascFilter ? <i className=\"arrow down\"></i> : <i className=\"arrow up\"></i>) }\n    </th>\n  )\n}\n\nexport default Th;\n","import React  from 'react'\n\nconst Td = ({ children }) => {\n  return (\n    <td>\n      {children}\n    </td>\n  )\n}\n\nexport default Td;","import React from \"react\";\nimport { WordStateModel } from \"../../../models/word-state\";\nimport Td from \"../td/Td\";\n\nconst Tr = ({\n  category,\n  word,\n  translation,\n  trained,\n  correct,\n  incorrect,\n  percentage,\n}: WordStateModel) => {\n  return (\n    <tr>\n      <Td>{category}</Td>\n      <Td>{word}</Td>\n      <Td>{translation}</Td>\n      <Td>{trained}</Td>\n      <Td>{correct}</Td>\n      <Td>{incorrect}</Td>\n      <Td>{percentage | 0}</Td>\n    </tr>\n  );\n};\n\nexport default Tr;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { WordStateModel } from \"../../models/word-state\";\n\nimport \"./statistic-table.scss\";\nimport Th from \"./th/Th\";\nimport Tr from \"./tr/Tr\";\n\ninterface FieldModel {\n  title: string;\n  field: string;\n}\n\nconst dataFields = [\n  {\n    title: \"Category\",\n    field: \"category\",\n  },\n  {\n    title: \"Word\",\n    field: \"word\",\n  },\n  {\n    title: \"Translation\",\n    field: \"translation\",\n  },\n  {\n    title: \"Trained\",\n    field: \"trained\",\n  },\n  {\n    title: \"Correct\",\n    field: \"correct\",\n  },\n  {\n    title: \"Incorrect\",\n    field: \"incorrect\",\n  },\n  {\n    title: \"%\",\n    field: \"percentage\",\n  },\n];\n\nconst StatisticTable = () => {\n  const { fieldFilter, ascFilter, data } = useTypedSelector(\n    (state) => state.statistic\n  );\n  const { fetchStatistic } = useActions();\n\n  const loadStatistic = useCallback(fetchStatistic, [])\n\n  useEffect(() => {\n    loadStatistic();\n  }, [loadStatistic]);\n\n  useEffect(() => {\n    loadStatistic(fieldFilter, ascFilter);\n  }, [loadStatistic, fieldFilter, ascFilter]);\n\n  return (\n    <div className=\"statistic-table__block\">\n      <table>\n        <thead>\n          <tr>\n            {dataFields.map((field: FieldModel, index: number) => (\n              <Th\n                key={index}\n                field={field.field}\n                fieldFilter={fieldFilter}\n                ascFilter={ascFilter}\n              >\n                {field.title}\n              </Th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((stateWord: WordStateModel, index: number) => (\n            <Tr {...stateWord} key={index} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default StatisticTable;\n","import React from 'react'\nimport StatisticTable from '../components/statistic-table/StatisticTable'\nimport { Link } from 'react-router-dom';\nimport Button from '../components/button/Button';\nimport { useActions } from '../hooks/useActions';\n\nconst StatisticPage = () => {\n  const { resetStatistic } = useActions();\n  return (\n    <main className=\"statistic-page container\">\n      <div className=\"row row--flex-end\">\n        <Link to='/hardwords' className=\"btn btn--primary\">Repeat difficult words</Link>\n        <Button onClick={() => resetStatistic()}>Reset</Button>\n      </div>\n      <StatisticTable />\n    </main>\n  )\n}\n\nexport default StatisticPage;","import React, { useRef } from 'react';\nimport Button from '../button/Button';\nimport './auth.scss';\n\nconst Auth = () => {\n  const formRef: React.RefObject<HTMLFormElement>  = useRef(null);\n\n  const resetForm = () => {\n    formRef.current?.reset();\n  }\n\n  return (\n    <div className=\"auth\">\n      <form ref={formRef} className=\"auth__form\">\n        <input type=\"email\" placeholder=\"login\" />\n        <input type=\"password\" placeholder=\"password\" />\n      </form>\n      <div className=\"auth__footer\">\n        <Button onClick={() => resetForm()} thema=\"danger\">Clear</Button>\n        <Button onClick={() => {}}>Login</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth;","import React from 'react'\nimport Auth from '../auth/Auth';\nimport './modal.scss';\n\ninterface ModalProps {\n  handlerClose: () => void;\n  open: boolean;\n}\n\nconst Modal = ({ open, handlerClose }: ModalProps) => {\n  return (\n    <div className={`modal ${open ? 'show' : 'hidden'}`} onClick={handlerClose}>\n      <div className=\"modal__inner\" onClick={((e) => e.stopPropagation())}>\n        <div className=\"modal__close\" onClick={handlerClose}>\n          <span></span>\n          <span></span>\n        </div>\n        <div className=\"modal__header\">\n          Login\n        </div>\n        <div className=\"modal__body\">\n          <Auth />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import App from './App';\n\nexport default App;\n","import React from \"react\";\nimport Header from \"../header/Header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles.scss\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport { getRoutes } from \"../../routes\";\nimport Modal from \"../modal/Modal\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { useActions } from \"../../hooks/useActions\";\n\nconst App = () => {\n  const routes = getRoutes();\n  const { sidebar } = useTypedSelector((state) => state.header);\n  const { open } = useTypedSelector((state) => state.modal);\n  const { setOpenModel } = useActions();\n\n  return (\n    <>\n      <Router>\n        <Header />\n        <Sidebar open={sidebar} />\n        <Modal open={open} handlerClose={() => setOpenModel(false)} />\n        <main className=\"container\">{routes}</main>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CategoryPage from \"./pages/CategoryPage\";\nimport HardwordsPage from \"./pages/HardwordsPage\";\nimport MainPage from \"./pages/MainPage\";\nimport StatisticPage from \"./pages/StatisticPage\";\n\nexport const getRoutes = () => {\n  return (<Switch>\n    <Route path=\"/home\" exact>\n      <MainPage />\n    </Route>\n    <Route path=\"/statistic\" exact>\n      <StatisticPage />\n    </Route>\n    <Route path=\"/hardwords\" exact>\n      <HardwordsPage />\n    </Route>\n    <Route\n      path=\"/categories/:category\"\n      render={({ match }) => <CategoryPage match={match} />}\n    />\n    <Redirect to=\"/home\" />\n  </Switch>)\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}